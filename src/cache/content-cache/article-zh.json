[
  {
    "slug": "typescript-error-cannot-find-module-undici-types",
    "title": "干净的 TypeScript 项目在编译时报错 Cannot find module 'undici-types' 的原因和解决",
    "desc": "很久前配合 《前端工程化：基于 Vue.js 3.0 的设计与实践》 一书在 TypeScript 章节里讲解的内容，提供了一个很干净的 demo （见 hello-node ），除了必要的基础技术栈外，没有过多的第三方依赖，一直运行良好，直到这个假期收到了读者反馈，和我说在运行 npm run build 时出现类似下方的报错，无法正确编译。",
    "cover": "https://cdn.chengpeiquan.com/img/2024/04/202404062211878.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://vue3.chengpeiquan.com/)[](https://github.com/learning-vue3/hello-node)`npm run build`[](https://github.com/chengpeiquan/learning-vue3/issues/193#issuecomment-2036541817)![读者反馈](https://cdn.chengpeiquan.com/img/2024/04/202404062221402.jpg?x-oss-process=image/interlace,1)`node_modules/@types/node/globals.d.ts````bash\n➜  hello-node git:(main) ✗ npm run build\n\n> @learning-vue3/node@1.0.0 build\n> tsc src/ts/index.ts --outDir dist --target es6\n\nnode_modules/@types/node/globals.d.ts:6:76 - error TS2792: Cannot find module 'undici-types'. Did you mean to set the 'moduleResolution' option to 'node', or to add aliases to the 'paths' option?\n\n6 type _Request = typeof globalThis extends { onmessage: any } ? {} : import(\"undici-types\").Request;\n                                                                             ~~~~~~~~~~~~~~\n\nnode_modules/@types/node/globals.d.ts:7:77 - error TS2792: Cannot find module 'undici-types'. Did you mean to set the 'moduleResolution' option to 'node', or to add aliases to the 'paths' option?\n\n7 type _Response = typeof globalThis extends { onmessage: any } ? {} : import(\"undici-types\").Response;\n                                                                              ~~~~~~~~~~~~~~\n// ...\n````@types/node`> `@types/node``@types/node``npm list @types/node``build````bash\n➜  hello-node-original git:(main) ✗ npm list @types/node\n\n@learning-vue3/node@1.0.0 /Users/chengpeiquan/Documents/projects/demo/h2\n└─┬ ts-node@10.9.1\n  └── @types/node@18.11.0\n````build``@types/node``18.11.0``ts-node``20.12.5````bash\n➜  hello-node git:(main) ✗ npm list @types/node\n\n@learning-vue3/node@1.0.0 /Users/chengpeiquan/Documents/projects/demo/hello-node\n└─┬ ts-node@10.9.2\n  └── @types/node@20.12.5\n````node_modules/ts-node``ts-node``@types/node``*````json\n{\n  \"name\": \"ts-node\",\n  \"version\": \"10.9.2\",\n  \"peerDependencies\": {\n    \"@types/node\": \"*\"\n  }\n}\n````undici-types``@types/node``dependencies`[](https://github.com/nodejs/undici/issues/2261)`skipLibCheck``.d.ts``--skipLibCheck````json\n// package.json\n{\n  \"scripts\": {\n    \"build\": \"tsc src/ts/index.ts --outDir dist --target es6 --skipLibCheck\"\n  }\n}\n````compilerOptions````json\n// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"es6\",\n    \"outDir\": \"./dist\",\n    \"skipLibCheck\": true\n  }\n}\n```[](https://www.typescriptlang.org/tsconfig#skipLibCheck)`skipLibCheck````bash\nDid you mean to set the 'moduleResolution' option to 'node', or to add aliases to the 'paths' option?\n````paths``--moduleResolution````json\n// package.json\n{\n  \"scripts\": {\n    \"build\": \"tsc src/ts/index.ts --outDir dist --target es6 --moduleResolution node\"\n  }\n}\n``````json\n// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"es6\",\n    \"outDir\": \"./dist\",\n    \"moduleResolution\": \"Node\"\n  }\n}\n```[](https://www.typescriptlang.org/tsconfig#moduleResolution)\n"
  },
  {
    "slug": "macos-android-studio-emulator-hosts",
    "title": "macOS 基于 Android Studio 修改模拟器 Hosts",
    "desc": "用回 macOS 一段时间了，各种软件对 M 系列芯片基本上也都有支持的版本，除了安卓模拟器 - - 。之前在 Windows 上面常用的 MuMu 、雷电、夜神等模拟器，不是没有 Mac 版，就是虽然有 Mac 版，但不支持 M 系列芯片（ ARM 架构），所以抛弃一系列国产模拟器，回归 Android Studio 。",
    "cover": "https://cdn.chengpeiquan.com/img/2024/02/202402102106942.jpg?x-oss-process=image/interlace,1",
    "content": "![不要选择 Google Play](https://cdn.chengpeiquan.com/img/2024/02/202402102127890.jpg?x-oss-process=image/interlace,1)![选择这种普通的](https://cdn.chengpeiquan.com/img/2024/02/202402102127906.jpg?x-oss-process=image/interlace,1)```bash\n# 访问 Android Studio 的模拟器文件夹\ncd ~/Library/Android/sdk/emulator/\n\n# 查询所有的模拟器列表\n./emulator -list-avds\n\n# 添加可写权限进行启动（这里的 Pixel_7_Pro_API_33 是模拟器名称）\n./emulator -avd Pixel_7_Pro_API_33 -writable-system\n````adb`[](https://developer.android.com/tools/adb?hl=zh-cn)[](https://stackoverflow.com/questions/17901692/set-up-adb-on-mac-os-x)[](https://github.com/ohmyzsh/ohmyzsh)```bash\necho 'export ANDROID_HOME=/Users/$USER/Library/Android/sdk' >> ~/.zshrc\necho 'export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> ~/.zshrc\nsource ~/.zshrc\n```![我的 .zshrc 配置](https://cdn.chengpeiquan.com/img/2024/02/202402102146502.png?x-oss-process=image/interlace,1)`adb version````bash\nadb version\n\nAndroid Debug Bridge version 1.0.41\nVersion 34.0.5-10900879\nInstalled as /Users/chengpeiquan/Library/Android/sdk/platform-tools/adb\nRunning on Darwin 23.1.0 (arm64)\n````5554`![通过命令行启动模拟器](https://cdn.chengpeiquan.com/img/2024/02/202402102220605.jpg?x-oss-process=image/interlace,1)![通过 Android Studio 启动模拟器](https://cdn.chengpeiquan.com/img/2024/02/202402102220607.png?x-oss-process=image/interlace,1)```bash\n# 通过 ADB 开启 Root 权限\nadb root\n\n# 挂载已启动的模拟器文件，这里记得对应模拟器的端口号\nadb -s emulator-5554 remount\n\n# 拉取模拟器的文件到桌面，方便修改\nadb pull /system/etc/hosts ~/Desktop/hosts\n``````bash\n# 改完后把 hosts 文件 push 回去\nadb push ~/Desktop/hosts /system/etc/hosts\n\n# 查看模拟器上的 hosts 文件内容，确认是否修改成功\nadb shell cat /etc/hosts\n```\n"
  },
  {
    "slug": "new-mac-2024",
    "title": "给猫儿子的新年礼物 它很喜欢！",
    "desc": "哈哈哈哈哈上一次买 Mac 还是 2015 年，然后在 2019 年换了 Windows 台式机用到现在。最近跑了 5 年的台式机又感觉配置不太够用了，干脆再换回 Mac ，开心！",
    "cover": "https://cdn.chengpeiquan.com/img/2024/02/202402102245723.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2024/02/202402102244502.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244503.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244504.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244506.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244507.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244508.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244509.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244510.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2024/02/202402102244511.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "2023-year-end-summary",
    "title": "年终总结：2023年的一些回顾和2024年的一些小规划",
    "desc": "本来今年的总结第一句话想写 “2023 对我算是比较特殊的一年” ，结果看了一眼去年的回顾，去年也是这么写的… 那今年再强化一下，改成 “2023 对我是非常特殊的一年” 哈哈哈哈哈哈哈，确实非常特殊的一年，因为经历了很多之前没有经历过的事情。",
    "cover": "https://cdn.chengpeiquan.com/img/2023/12/20231230212146.jpg?x-oss-process=image/interlace,1",
    "content": "![我家三只超级乖的猫](https://cdn.chengpeiquan.com/img/2023/12/20231230212147.jpg?x-oss-process=image/interlace,1)>[](https://github.com/chengpeiquan/chengpeiquan.com/issues/363)![催更现场](https://cdn.chengpeiquan.com/img/2023/12/20231230161603.jpg?x-oss-process=image/interlace,1)![薄如蝉翼的稿袋](https://cdn.chengpeiquan.com/img/2023/12/20231230170944.jpg?x-oss-process=image/interlace,1)![也就几页稿子…](https://cdn.chengpeiquan.com/img/2023/12/20231230170945.jpg?x-oss-process=image/interlace,1)![《前端工程化：基于 Vue.js 3.0 的设计与实践》](https://cdn.chengpeiquan.com/img/2023/12/20231230172538.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/article/the-story-of-the-book-learning-vue3.html)![人生第一次在自己的书上签名](https://cdn.chengpeiquan.com/img/2023/12/20231230172539.jpg?x-oss-process=image/interlace,1)![真的很羞涩哈哈哈哈](https://cdn.chengpeiquan.com/img/2023/12/20231230172540.jpg?x-oss-process=image/interlace,1)[](https://preset.js.org)![当时的票圈](https://cdn.chengpeiquan.com/img/2023/12/20231230172804.jpg?x-oss-process=image/interlace,1)![乱画一通](https://cdn.chengpeiquan.com/img/2023/12/20231230173612.jpg?x-oss-process=image/interlace,1)![第一个文身的由来](https://cdn.chengpeiquan.com/img/2023/12/20231230185256.jpg?x-oss-process=image/interlace,1)![红白机永远的神！](https://cdn.chengpeiquan.com/img/2023/12/20231230174154.jpg?x-oss-process=image/interlace,1)![双截龙 Ⅱ](https://cdn.chengpeiquan.com/img/2023/12/20231230190303.jpg?x-oss-process=image/interlace,1)>![UC 十周年时，当年发的朋友圈](https://cdn.chengpeiquan.com/img/2023/12/20231231131332.jpg?x-oss-process=image/interlace,1)[](https://github-contributions.vercel.app)![2023 年在 GitHub 的活跃情况](https://cdn.chengpeiquan.com/img/2023/12/20231230203922.jpg?x-oss-process=image/interlace,1)[](https://wakatime.com)![2023-12-03](https://cdn.chengpeiquan.com/img/2023/12/20231230202751.jpg?x-oss-process=image/interlace,1)1) [](https://github.com/chengpeiquan/bassist)\n2)\n3)![惨兮兮的朋友圈](https://cdn.chengpeiquan.com/img/2023/12/20231230211312.jpg?x-oss-process=image/interlace,1)![好多计划都赶不上变化哈哈哈哈](https://cdn.chengpeiquan.com/img/2023/12/20231230211903.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "my-custom-nas",
    "title": "千元预算组装了个入门NAS设备 一文分享NAS的硬件基础知识",
    "desc": "最近在一千元预算内搞了一台 NAS ，在这个过程也算蛮自定义的搭配，记录一下这个过程中的主要知识点和最终搭配结果。初接触 NAS 的时候最迷茫的应该就是它的概念和用途了，就算了解了它的作用，想采购一个合适的 NAS 设备又会涉及到很多硬件知识。既然选择自己配 NAS 做一个 DIY 玩家，肯定还是需要先熟悉一些前置的硬件知识，否则大可花几千块钱买成品 NAS 了，所以有一些前置知识点还是值得先简单了解一下。",
    "cover": "https://cdn.chengpeiquan.com/img/2023/06/20230611223039.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://en.wikipedia.org/wiki/Network-attached_storage)![借助 NAS 系统，分布式工作环境可以轻松地从任何联网设备访问文件和文件夹](https://cdn.chengpeiquan.com/img/2023/06/20230610151033.jpg?x-oss-process=image/interlace,1)![我在台式机访问局域网 IP 即可进入 NAS 操作系统界面](https://cdn.chengpeiquan.com/img/2023/06/20230610174922.jpg?x-oss-process=image/interlace,1)[](https://www.zhihu.com/question/314817041)[](https://www.zhihu.com/question/51801176)![我不能走路那段时间的日记](https://cdn.chengpeiquan.com/img/2023/06/20230610142844.png?x-oss-process=image/interlace,1)![BEYOND 长城](https://cdn.chengpeiquan.com/img/2023/06/20230610162359.jpg?x-oss-process=image/interlace,1)![南京市民李先生的音乐文件](https://cdn.chengpeiquan.com/img/2023/06/20230610144232.jpg?x-oss-process=image/interlace,1)[](/cookbook)***[](#搭配方案)***[](https://www.google.com/search?q=NAS+%E4%BD%8E%E5%8A%9F%E8%80%97+CPU)***![三种主板的尺寸关系](https://cdn.chengpeiquan.com/img/2023/05/20230514224702.jpg?x-oss-process=image/interlace,1)***1)|     |     |     |     |\n| :-: | :-: | :-: | :-: |\n|     |     |     |     |\n|     |     |     |     |\n|     |     |     |     |\n|     |     |     |     |![以台式机内存条为例，不同的 DDR 标准对应的防呆槽位置](https://cdn.chengpeiquan.com/img/2023/06/20230611023130.jpg?x-oss-process=image/interlace,1)>2)|     |     |     |     |\n| :-: | :-: | :-: | :-: |\n|     |     |     |     |\n|     |     |     |     |![台式机内存条和笔记本内存条的尺寸对比](https://cdn.chengpeiquan.com/img/2023/06/20230611151827.jpg?x-oss-process=image/interlace,1)3.4)***|     |     |     |     |\n| :-: | :-: | :-: | :-: |\n|     |     |     |     |\n|     |     |     |     |[](#关于机械硬盘)-\n-![不同接口和造型的 SSD 对比](https://cdn.chengpeiquan.com/img/2023/06/20230611170559.jpg?x-oss-process=image/interlace,1)***![NAS 四盘位机箱结构图](https://cdn.chengpeiquan.com/img/2023/06/20230611173304.jpg?x-oss-process=image/interlace,1)![迷你主机结构图](https://cdn.chengpeiquan.com/img/2023/06/20230611174734.jpg?x-oss-process=image/interlace,1)***![可以看到通常商品购买页面有非常多的尺寸可以选择](https://cdn.chengpeiquan.com/img/2023/06/20230611173458.jpg?x-oss-process=image/interlace,1)![散热风扇造型参考](https://cdn.chengpeiquan.com/img/2023/06/20230611173929.jpg?x-oss-process=image/interlace,1)***![这种是 Flex 小 1U 电源](https://cdn.chengpeiquan.com/img/2023/06/20230611184314.jpg?x-oss-process=image/interlace,1)![这种是电源适配器](https://cdn.chengpeiquan.com/img/2023/06/20230611184022.jpg?x-oss-process=image/interlace,1)***- [](https://post.smzdm.com/p/a4pep4rw/)\n- [](https://zhuanlan.zhihu.com/p/99411557)\n- [](https://diy.zol.com.cn/778/7781635.html)\n- [](https://www.zhihu.com/question/444532170)\n- [](https://www.crucial.tw/articles/about-memory/difference-among-ddr2-ddr3-ddr4-and-ddr5-memory)\n- [](https://www.pcworld.com/article/558324/nvme-vs-m-2-vs-sata-ssd-whats-the-difference.html)\n- [](https://www.zhihu.com/question/387154741)\n- [](https://www.fcpowerup.com/atx-sfx-sfxl-1u-flex-dimension/)\n- [](https://zhuanlan.zhihu.com/p/157678770)***[](#硬盘)1)\n2)***![CMR 的磁道示例](https://cdn.chengpeiquan.com/img/2023/06/20230611190217.jpg?x-oss-process=image/interlace,1)![SMR 的磁道示例](https://cdn.chengpeiquan.com/img/2023/06/20230611190218.jpg?x-oss-process=image/interlace,1)***![两者的区别](https://cdn.chengpeiquan.com/img/2023/06/20230611191901.jpg?x-oss-process=image/interlace,1)***![几种不同的接口参考](https://cdn.chengpeiquan.com/img/2023/06/20230611192549.jpg?x-oss-process=image/interlace,1)*********- [](https://zhuanlan.zhihu.com/p/57800929)\n- [](https://zhuanlan.zhihu.com/p/320796902)\n- [](https://zhuanlan.zhihu.com/p/528801946)\n- [](https://zhuanlan.zhihu.com/p/544175438)\n- [](https://www.sohu.com/a/553078949_120111001)\n- [](https://www.sohu.com/a/580279682_121118998)\n- [](https://blog.csdn.net/shuai0845/article/details/98330290)***> [](#最终方案)*\n*\n*\n*\n*|     |                                                      |     |    |\n| :-: | :--------------------------------------------------- | :-: | :- |\n|     |                                                      |     |    |\n|     |                                                      |     |    |\n|     |                                                      |     |    |\n|     |                                                      |     |    |\n|     | [](https://item.taobao.com/item.htm?id=688559998268) |     |    |\n|     | [](https://item.taobao.com/item.htm?id=706447703621) |     |    |\n|     | [](https://item.taobao.com/item.htm?id=558603479364) |     |    ||                                                       |     |     |     |     |\n| :---------------------------------------------------: | :-: | :-: | :-: | :-: |\n| [](https://detail.tmall.com/item.htm?id=688206851233) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=663382260464) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=688206851233) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=663382260464) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=712232085836) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=669578613219) |     |     |     |     |\n| [](https://detail.tmall.com/item.htm?id=714619184058) |     |     |     |     |-\n-\n-\n-\n-*\n*\n*\n*\n*|     |    |     |    |\n| :-: | :- | :-: | :- |\n|     |    |     |    |\n|     |    |     |    |\n|     |    |     |    |\n|     |    |     |    |\n|     |    |     |    |\n|     |    |     |    ||     |                                                      |     |    |\n| :-: | :--------------------------------------------------- | :-: | :- |\n|     | [](https://item.jd.com/10039690351520.html)          |     |    |\n|     | [](https://item.jd.com/100014988528.html)            |     |    |\n|     | [](https://item.jd.com/3258936.html)                 |     |    |\n|     | [](https://item.jd.com/10040397930046.html)          |     |    |\n|     | [](https://item.taobao.com/item.htm?id=558603479364) |     |    |![伪装起来还是有模有样的](https://cdn.chengpeiquan.com/img/2023/06/20230611215548.jpg?x-oss-process=image/interlace,1)![弟弟好像发现了里面有什么奇怪的东西](https://cdn.chengpeiquan.com/img/2023/06/20230611215549.jpg?x-oss-process=image/interlace,1)![弟弟一回头：“我的航空箱呢？”](https://cdn.chengpeiquan.com/img/2023/06/20230611215550.jpg?x-oss-process=image/interlace,1)![再往前看：“果然是它”](https://cdn.chengpeiquan.com/img/2023/06/20230611215551.jpg?x-oss-process=image/interlace,1)![航空箱内部的散热还是很不错的](https://cdn.chengpeiquan.com/img/2023/06/20230611215552.jpg?x-oss-process=image/interlace,1)[](https://pve.proxmox.com/)[](https://www.vmware.com/hk/products/esxi-and-esx.html)[](https://unraid.net/)![PVE 后台](https://cdn.chengpeiquan.com/img/2023/06/20230611220529.jpg?x-oss-process=image/interlace,1)![群晖 NAS](https://cdn.chengpeiquan.com/img/2023/06/20230611222354.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "the-story-of-the-book-learning-vue3",
    "title": "我写了一本书《前端工程化：基于 Vue.js 3.0 的设计与实践》 想分享一下它背后的故事",
    "desc": "大家好，我是程沛权，经过差不多一年时间的打磨和优化，我的第一本技术书籍《前端工程化：基于 Vue.js 3.0 的设计与实践》出版上市啦！这是一本以 Vue.js 的 3.0 版本为核心技术栈，围绕 “前端工程化” 和 TypeScript 的知识点展开讲解的前端入门书籍。",
    "cover": "https://cdn.chengpeiquan.com/img/2023/05/20230506220635.jpg?x-oss-process=image/interlace,1",
    "content": "![前端工程化：基于 Vue.js 3.0 的设计与实践](https://cdn.chengpeiquan.com/img/2023/05/20230504234507.png?x-oss-process=image/interlace,1)1.\n2.\n3.1)\n2)\n3)[](https://vue3.chengpeiquan.com/)[](https://union-click.jd.com/jdc?e=jdext-1638352360249409536-0-1&p=JF8BARkJK1olXwQBUVpdAE8SAF8IGVMRXgICV24ZVxNJXF9RXh5UHw0cSgYYXBcIWDoXSQVJQwYAXFpeDEsUHDZNRwYlX1JEIQg5XCt0ZAlqUiVNX0FQACsWTkcbM28BG1kdXAcCU11tCEoWA2sNGFgTXDYyVFttWiXPtdnQvuoJiayNgdbKOEonA2gBGVkdXwEHVFdeAXsXC2s4zfWBiI69je743uG51uK4ztK-ibiEZG5tC3tMVjtBXkcVWgQLVlpeCkwWAGoAHlodWQQFSF9BCHsXAm4KE1gWWgQGOltdCUoVAGoBElh7XwcDVltdDksXAV8IK1glA2gDB1heWkweVgFVQgkdX00BHTBdDUgXAW4OHF8lXwcDVlxtOA)[](https://s.click.taobao.com/t?e=m%3D2%26s%3D7eZPjJt7QJNw4vFB6t2Z2ueEDrYVVa64yK8Cckff7TVRAdhuF14FMXonIcf4DInoMMgx22UI05ZRvxcz%2FoTyBGNojKDSmWQhTIZbYI9jayp8PNk4B98QhUVUjoeWqzb%2B5mzd0fxoCIaFpjofm3hpRhwogYNSK3IrQPZdAhulFAULZMqoQW%2BfuB6GmlJyRiVTGSs8kMDMeyhHJZaVw28y8Wrk5fXXieVy6a%2F%2FENJP36wMyM3sDoIE3myjwLjQ1DptJJn7FkCnT%2F5j0n6UXAgF3v2%2BtTfElYb8RFDRgzhUg%2BSjJnAf507Uv%2BiK7LcQp3KospWd4zfY8zqcEdwGxwkp5JaYzSMEwlxThakdowOjbI2OmjxjH%2BEyQGTWRvaaxnzAXJHdUWjDlfMDnfwHPQnOXiGFCzYOOqAQ&unid=1X3aISuD7B60&union_lens=lensId:TAPI@1683471818@2103de44_0d37_187f6bd6062_8bdf@01)![GitHub 上的读者评论](https://cdn.chengpeiquan.com/img/2023/05/20230505011051.jpg?x-oss-process=image/interlace,1)![来自宝岛的小姐姐热心安利](https://cdn.chengpeiquan.com/img/2023/05/20230505011723.jpg?x-oss-process=image/interlace,1)![一些赞赏记录](https://cdn.chengpeiquan.com/img/2023/05/20230505014847.jpg?x-oss-process=image/interlace,1)![我家的三只猫](https://cdn.chengpeiquan.com/img/2023/05/20230505015055.jpg?x-oss-process=image/interlace,1)![我家的三只猫](https://cdn.chengpeiquan.com/img/2022/12/20221231235941.jpg?x-oss-process=image/interlace,1)[](https://github.com/vuejs/rfcs)[](https://zhuanlan.zhihu.com/p/386919557)![当时记录的一些临时笔记](https://cdn.chengpeiquan.com/img/2023/05/20230505225018.png?x-oss-process=image/interlace,1)[](https://github.com/EbookFoundation/free-programming-books/pull/6075)![Max 的问号脸.jpg](https://cdn.chengpeiquan.com/img/2023/05/20230506000311.jpg?x-oss-process=image/interlace,1)![自己做的吉他模型](https://cdn.chengpeiquan.com/img/2023/05/20230506001707.jpg?x-oss-process=image/interlace,1)![左边是借的第一把贝斯，右边是自己的琴](https://cdn.chengpeiquan.com/img/2023/05/20230506013700.png?x-oss-process=image/interlace,1)[](https://music.163.com/#/song?id=21616345)[](https://zhuanlan.zhihu.com/p/29220064)![用了好久 “胸口碎大石” 这个乐队名](https://cdn.chengpeiquan.com/img/2023/05/20230506010210.png?x-oss-process=image/interlace,1)![“程小姐” 你好…](https://cdn.chengpeiquan.com/img/2023/05/20230506010544.png?x-oss-process=image/interlace,1)![我的花臂](https://cdn.chengpeiquan.com/img/2023/05/20230506010724.png?x-oss-process=image/interlace,1)![记录一下在网易五年来的工作与生活](https://cdn.chengpeiquan.com/img/2020/06/my-netease/qrcode.jpg?x-oss-process=image/interlace,1)[](https://zhuanlan.zhihu.com/p/460538277)![一周写了 24 多个小时的文档](https://cdn.chengpeiquan.com/img/2022/01/20220121232856.png?x-oss-process=image/interlace,1)- [](https://requirement-design.ppt.chengpeiquan.com)\n- [](https://hoo-retrospective-meeting.ppt.chengpeiquan.com)![左边是我的小红书账号，右边是我曾经写了两千多字的日记](https://cdn.chengpeiquan.com/img/2023/05/20230506222320.png?x-oss-process=image/interlace,1)[](https://union-click.jd.com/jdc?e=jdext-1638352360249409536-0-1&p=JF8BARkJK1olXwQBUVpdAE8SAF8IGVMRXgICV24ZVxNJXF9RXh5UHw0cSgYYXBcIWDoXSQVJQwYAXFpeDEsUHDZNRwYlX1JEIQg5XCt0ZAlqUiVNX0FQACsWTkcbM28BG1kdXAcCU11tCEoWA2sNGFgTXDYyVFttWiXPtdnQvuoJiayNgdbKOEonA2gBGVkdXwEHVFdeAXsXC2s4zfWBiI69je743uG51uK4ztK-ibiEZG5tC3tMVjtBXkcVWgQLVlpeCkwWAGoAHlodWQQFSF9BCHsXAm4KE1gWWgQGOltdCUoVAGoBElh7XwcDVltdDksXAV8IK1glA2gDB1heWkweVgFVQgkdX00BHTBdDUgXAW4OHF8lXwcDVlxtOA)[](https://s.click.taobao.com/t?e=m%3D2%26s%3D7eZPjJt7QJNw4vFB6t2Z2ueEDrYVVa64yK8Cckff7TVRAdhuF14FMXonIcf4DInoMMgx22UI05ZRvxcz%2FoTyBGNojKDSmWQhTIZbYI9jayp8PNk4B98QhUVUjoeWqzb%2B5mzd0fxoCIaFpjofm3hpRhwogYNSK3IrQPZdAhulFAULZMqoQW%2BfuB6GmlJyRiVTGSs8kMDMeyhHJZaVw28y8Wrk5fXXieVy6a%2F%2FENJP36wMyM3sDoIE3myjwLjQ1DptJJn7FkCnT%2F5j0n6UXAgF3v2%2BtTfElYb8RFDRgzhUg%2BSjJnAf507Uv%2BiK7LcQp3KospWd4zfY8zqcEdwGxwkp5JaYzSMEwlxThakdowOjbI2OmjxjH%2BEyQGTWRvaaxnzAXJHdUWjDlfMDnfwHPQnOXiGFCzYOOqAQ&unid=1X3aISuD7B60&union_lens=lensId:TAPI@1683471818@2103de44_0d37_187f6bd6062_8bdf@01)![之前跟朋友说的哈哈哈](https://cdn.chengpeiquan.com/img/2023/05/20230506015009.jpg?x-oss-process=image/interlace,1)![一年多前觉得是这个原因](https://cdn.chengpeiquan.com/img/2023/05/20230506015141.jpg?x-oss-process=image/interlace,1)![现在还是觉得是这个原因](https://cdn.chengpeiquan.com/img/2023/05/20230506015142.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "git-selective-merge",
    "title": "Git的选择性合并操作笔记：合并某个版本或某个提交",
    "desc": "今天帮朋友解决了一个代码合并的问题，他有两个项目， B 项目最初是基于 A 项目作为架构底子，根据业务进行了不同需求的开发，沉淀了不少新功能，而 A 项目本身也在继续维护，可以简单的理解为， A 项目是通过类似 create-preset 这样的脚手架拉取下来的一个项目模板，而 B 项目是一个业务项目，所以 A 项目通常只提供一些公共功能的维护升级，而 B 项目更注重业务功能开发。",
    "cover": "https://cdn.chengpeiquan.com/img/2023/02/20230202170739.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://github.com/awesome-starter/create-preset)|     |    |\n| :-: | :- |\n|     |    |\n|     |    |`git remote add <shortname> <url>``git merge <commit_hash>``10``--depth 10``--branch``--single-branch``main````bash\ngit clone https://github.com/chengpeiquan/test.git --branch main --single-branch --depth 10\n````git log``main``--oneline````bash\ncd test\ngit log --oneline main origin/main\n``````bash\n# git log --oneline main origin/main\n3ad0947 (HEAD -> main, origin/main, origin/HEAD) chore: backup\nfc322fe chore: backup\n1cc6c01 chore: backup\n4898c9c chore: backup\n8258834 chore: backup\ncb7d560 chore: backup\n10b3bb5 chore: backup\n2119218 chore: backup\n1c0c5ba feat: backup\nf49e8b0 (grafted) chore: backup\n````Already up-to-date.````bash\ngit reset --hard f49e8b0\n````git merge <commit_hash>``cb7d560````bash\ngit merge cb7d560\n``````bash\n# git merge cb7d560\nUpdating f49e8b0..cb7d560\nFast-forward\nREADME.md | 14 +++++++++++---\ndocs/introduction.md | 1 -\ndocs/zh/introduction.md | 1 -\n3 files changed, 11 insertions(+), 5 deletions(-)\ndelete mode 100644 docs/introduction.md\ndelete mode 100644 docs/zh/introduction.md\n````main``main````bash\ngit log --oneline main origin/main\n``````bash\n# git log --oneline main origin/main\n3ad0947 (origin/main, origin/HEAD) chore: backup\nfc322fe chore: backup\n1cc6c01 chore: backup\n4898c9c chore: backup\n8258834 chore: backup\ncb7d560 (HEAD -> main) chore: backup\n10b3bb5 chore: backup\n2119218 chore: backup\n1c0c5ba feat: backup\nf49e8b0 (grafted) chore: backup\n``````bash\ngit checkout -b dev\n````dev``main````bash\ngit log --oneline dev origin/main\n````main````bash\n# git log --oneline dev origin/main\n3ad0947 (origin/main, origin/HEAD) chore: backup\nfc322fe chore: backup\n1cc6c01 chore: backup\n4898c9c chore: backup\n8258834 chore: backup\ncb7d560 (HEAD -> dev, main) chore: backup\n10b3bb5 chore: backup\n2119218 chore: backup\n1c0c5ba feat: backup\nf49e8b0 (grafted) chore: backup\n````dev````bash\ngit push -u origin dev\n```![main 分支的提交记录](https://cdn.chengpeiquan.com/img/2023/02/20230203163624.jpg?x-oss-process=image/interlace,1)![dev 分支的提交记录](https://cdn.chengpeiquan.com/img/2023/02/20230203163625.jpg?x-oss-process=image/interlace,1)[](#合并某个版本)`git merge``git cherry-pick <commit_hash>``dev````bash\ngit log --oneline dev origin/main\n```[](#合并某个版本)```bash\n# git log --oneline dev origin/main\n3ad0947 (origin/main, origin/HEAD) chore: backup\nfc322fe chore: backup\n1cc6c01 chore: backup\n4898c9c chore: backup\n8258834 chore: backup\ncb7d560 (HEAD -> dev, main) chore: backup\n10b3bb5 chore: backup\n2119218 chore: backup\n1c0c5ba feat: backup\nf49e8b0 (grafted) chore: backup\n``````bash\ngit cherry-pick 4898c9c\n``````bash\n# git cherry-pick 4898c9c\nAuto-merging README.md\n[dev 3f8b616] chore: backup\nDate: Mon Dec 5 13:54:43 2022 +0800\n1 file changed, 5 insertions(+), 1 deletion(-)\n````dev``main````bash\n# git log --oneline dev origin/main\n3f8b616 (HEAD -> dev) chore: backup\n3ad0947 (origin/main, origin/HEAD) chore: backup\nfc322fe chore: backup\n1cc6c01 chore: backup\n4898c9c chore: backup\n8258834 chore: backup\ncb7d560 (main) chore: backup\n10b3bb5 chore: backup\n2119218 chore: backup\n1c0c5ba feat: backup\nf49e8b0 (grafted) chore: backup\n```\n"
  },
  {
    "slug": "2022-year-end-summary",
    "title": "年终总结：2022年的一些回顾和2023年的一些小规划",
    "desc": "2022 对我算是比较特殊的一年，虽然因为疫情原因彻底宅了一年，但也没有闲着，换了工作换了城市，回到了阔别两年的第二故乡广州，工作之外的学习和生活对个人的成长也有一些值得复盘的地方。",
    "cover": "https://cdn.chengpeiquan.com/img/2023/01/20230101235604.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://chengpeiquan.com/topic/netease)<VideoPlayer\nurl=\"https://cdn.chengpeiquan.com/video/my-cats-in-mountain-view-room.mp4\"\nposter=\"https://cdn.chengpeiquan.com/img/2022/12/20221231235941.jpg?x-oss-process=image/interlace,1\"\ntitle=\"山景房里的三只猫\"\n/>[](https://chengpeiquan.com/cookbook)[](#开源社区)![头发达到了新的长度](https://cdn.chengpeiquan.com/img/2023/01/20230101231241.jpg?x-oss-process=image/interlace,1)[](https://github-contributions.vercel.app/)![这两年在 GitHub 的活跃情况](https://cdn.chengpeiquan.com/img/2022/12/20221231235848.jpg?x-oss-process=image/interlace,1)[](https://github.com/chengpeiquan/learning-vue3)[](https://es6.ruanyifeng.com)[](https://vue3.chengpeiquan.com/changelog.html#_2022-04-30)![仓库接近 500 Star 了](https://cdn.chengpeiquan.com/img/2023/01/20230101232239.jpg?x-oss-process=image/interlace,1)![在 GitHub 仓库里的评论](https://cdn.chengpeiquan.com/img/2023/01/20230101223359.jpg?x-oss-process=image/interlace,1)![在 GitHub 仓库里的评论](https://cdn.chengpeiquan.com/img/2023/01/20230101223358.jpg?x-oss-process=image/interlace,1)![在 GitHub 仓库里的评论](https://cdn.chengpeiquan.com/img/2023/01/20230101223357.jpg?x-oss-process=image/interlace,1)![在 GitHub 仓库里的评论](https://cdn.chengpeiquan.com/img/2023/01/20230101223356.jpg?x-oss-process=image/interlace,1)![在 GitHub 仓库里的评论](https://cdn.chengpeiquan.com/img/2023/01/20230101223355.jpg?x-oss-process=image/interlace,1)[](https://www.facebook.com/mukispace/posts/pfbid02QNhZR5DkCAZvtkyJWJuHSSBtW2qPtoUJajQo59sRQbAG2zyRUqcskwGNPxcCEHB3l)![台湾网友的分享](https://cdn.chengpeiquan.com/img/2023/01/20230101224000.jpg?x-oss-process=image/interlace,1)[](https://npm-stat.com/charts.html?author=chengpeiquan&from=2019-12-31&to=2022-12-31)![来自 npm-stat 网站的统计数据](https://cdn.chengpeiquan.com/img/2023/01/20230101224519.jpg?x-oss-process=image/interlace,1)[](https://github.com/chengpeiquan/vite-plugin-banner/pull/16)![在 PR 过程中讨论功能的取舍](https://cdn.chengpeiquan.com/img/2023/01/20230101225852.jpg?x-oss-process=image/interlace,1)![新官网上挂着自己画的 Logo](https://cdn.chengpeiquan.com/img/2023/01/20230101230308.jpg?x-oss-process=image/interlace,1)![底迪很喜欢在阳台看山景](https://cdn.chengpeiquan.com/img/2023/01/20230101231242.jpg?x-oss-process=image/interlace,1)1)\n2)\n3) [](https://github.com/awesome-starter/create-preset)\n"
  },
  {
    "slug": "zhihu-collection-helper",
    "title": "知乎收藏夹助手：自动化将专栏的文章添加到收藏夹",
    "desc": "知乎收藏夹助手，可将专栏的文章添加到收藏夹中（因为专栏的内容通常比较垂直，不会太杂），适用于收藏夹在创建初期需要大量内容填充的情况。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/10/20221021235753.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://www.zhihu.com/collection/839257512)[](https://nodejs.org/zh-cn/)```bash\n# 克隆仓库到本地\ngit clone https://github.com/chengpeiquan/zhihu-collection-helper.git\n\n# 进入项目目录\ncd zhihu-collection-helper\n\n# 安装依赖（可使用 npm / yarn 等其他包管理器）\npnpm i\n\n# 运行开始命令\npnpm start\n```[](#配置文件)[](https://github.com/motdotla/dotenv)`.env`|     |     |                   |\n| :-: | :-: | :---------------: |\n|     |     |                   |\n|     |     |                   |\n|     |     |                   |\n|     |     |       `100`       |\n|     |     | `Request Headers` |\n|     |     | `Request Headers` |\n|     |     | `Request Headers` |\n|     |     | `Request Headers` |\n|     |     | `Request Headers` |\n|     |     | `Request Headers` |`403 Forbidden`[](./src/utils.ts#L36-L43)\n"
  },
  {
    "slug": "vite-vue3-prerender",
    "title": "用Vite更简单的解决Vue3项目的预渲染问题",
    "desc": "之前 Webpack 项目经常会用到预渲染，现在团队都开始用 Vite 了，所以弄一个基于 Vite 的 Vue 3 预渲染 demo 可以参考。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/06/20220605213042.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/src/router/index.ts)[](https://www.npmjs.com/package/vite-ssg)[](https://www.npmjs.com/package/vite-plugin-pages)`index.html`|                        |     |     |\n| :--------------------: | :-: | :-: |\n| `<!--preload-links-->` |     |     |\n|    `<!--app-html-->`   |     |     |\n|     `<!--title-->`     |     |     |\n|  `<!--description-->`  |     |     |\n|    `<!--keywords-->`   |     |     |`entry-client.ts``main.ts`[](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/index.html)```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <!--title-->\n    <!--description-->\n    <!--keywords-->\n    <!--preload-links-->\n  </head>\n  <body>\n    <div id=\"app\"><!--app-html--></div>\n    <script type=\"module\" src=\"/src/entry-client.ts\"></script>\n  </body>\n</html>\n```[](#seo-优化)`src/main.ts`|                   |     |                                                                                            |\n| :---------------: | :-: | :----------------------------------------------------------------------------------------: |\n| `entry-client.ts` |     | [](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/src/entry-client.ts) |\n| `entry-server.ts` |     | [](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/src/entry-server.ts) |`main.ts`[](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/src/main.ts)`src/views`[](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/src/router/index.ts)`src/router`[](#预渲染)```ts\nexport default [\n  {\n    url: '/',\n    title: '首页',\n    description: '这是首页',\n    keywords: ['关键词1', '关键词2'],\n  },\n  // ...\n]\n```[](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/src/router/seo.ts)`scripts/prerender.ts``npm run generate``dist/static``npm run build`[](https://github.com/chengpeiquan/vite-vue3-prerender-demo/blob/main/package.json)`scripts````bash\nHydration node mismatch:\n- Client vnode: div\n- Server rendered DOM: <!--app-html-->\n```[](https://github.com/vuejs/core/blob/main/packages/runtime-core/src/hydration.ts)[](https://www.sumcumo.com/en/understand-and-solve-hydration-errors-in-vue-js)```bash\nUnhandled error during execution of scheduler flush\n````<Suspense />`[](https://v3.cn.vuejs.org/guide/migration/suspense.html#suspense)```diff\n<template>\n-  <!-- <router-view :key=\"key\" /> -->\n+  <router-view :key=\"key\" v-slot=\"{ Component }\">\n+    <Suspense>\n+      <div>\n+        <component :is=\"Component\" />\n+      </div>\n+    </Suspense>\n+  </router-view>\n</template>\n```\n"
  },
  {
    "slug": "pinia",
    "title": "Pinia怎么用？Vue3全局状态的管理工具Pinia教程",
    "desc": "Vue 官方推出的全局状态管理工具目前有 Vuex 和 Pinia ，两者的作用和用法都比较相似，但 Pinia 的设计更贴近 Vue 3 组合式 API 的用法。Pinia 目前还没有被广泛的默认集成在各种脚手架里，官网也只有英文版，整理了教程便于提前学习。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/04/20220405011839.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://vue3.chengpeiquan.com/pinia.html)[](https://github.com/vuejs/rfcs/discussions/270)![Pinia Logo](https://cdn.chengpeiquan.com/img/2022/04/20220405012555.png?x-oss-process=image/interlace,1)[](https://vue3.chengpeiquan.com/)[](https://vue3.chengpeiquan.com/)[](https://github.com/chengpeiquan/learning-vue3)\n"
  },
  {
    "slug": "cooking-cookbook",
    "title": "每天吃什么？上班带什么饭？程序员教你做菜啦！",
    "desc": "从 2021 年底陆续开始维护这个菜谱栏目，终于有一些像模像样的作品沉淀了，你可以在这里了解一些关于如何下厨烹饪的菜谱和教程，这是来自一名从小就学做饭的程序员的原创经验。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/02/20220221130454.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://www.xiaohongshu.com/user/profile/5c6cf700000000001003f7f6)> [](https://github.com/chengpeiquan/cooking-cookbook)\n>\n> [](https://github.com/chengpeiquan/chengpeiquan.com)[](https://chengpeiquan.com/cookbook)![菜谱网页版预览](https://cdn.chengpeiquan.com/img/2022/02/20220221112510.jpg?x-oss-process=image/interlace,1)![搜一搜：底迪](https://cdn.chengpeiquan.com/img/2022/02/20220221111852.jpg?x-oss-process=image/interlace,1)![小程序：底迪](https://cdn.chengpeiquan.com/img/2022/02/20220221113828.jpg?x-oss-process=image/interlace,1)[](https://www.xiaohongshu.com/user/profile/5c6cf700000000001003f7f6)![小红书：底迪](https://cdn.chengpeiquan.com/img/2022/02/20220221113517.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/article/cookbook-faq.html)- [](https://www.xiaohongshu.com/user/profile/5c6cf700000000001003f7f6)\n- [](https://www.zhihu.com/people/basss)\n- [](chengpeiquan@chengpeiquan.com)\n- [](https://github.com/chengpeiquan/chengpeiquan.com/issues)[](#问题反馈)\n"
  },
  {
    "slug": "flutter",
    "title": "从前端开发者身份入门Flutter和Dart的学习笔记",
    "desc": "最近有空，接触一下 Flutter 和 Dart 的开发，虽然说前端入门 Flutter 比较友好，但个人觉得最最最开始其实不怎么友好，当然写了几个小时 Dart 之后感觉确实都是熟悉的身影，但真的刚入门的那一两个小时真的特别困，所以还是要不定期记录一些遇到的问题。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/11/20220127161927.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2021/11/20220127163236.jpg?x-oss-process=image/interlace,1)[](https://docs.flutter.dev/)[](https://book.flutterchina.club/)[](https://book.flutterchina.club/chapter1/dart.html)[](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo)[](https://zhuanlan.zhihu.com/p/90836859)> `r`* [](https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter)\n\n* [](https://marketplace.visualstudio.com/items?itemName=Dart-Code.dart-code)[](https://github.com/chengpeiquan/flutter_demo/blob/main/.vscode/launch.json)```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Flutter\",\n      \"type\": \"dart\",\n      \"request\": \"launch\"\n    }\n  ]\n}\n````cd``flutter run`[](https://blog.csdn.net/qq_40259641/article/details/90475896)`lib``main.dart``runApp````dart\nvoid main() {\n  runApp(const MyApp());\n}\n```[](https://github.com/alibaba/flutter-go/tree/master/lib)```dart\nMaterialApp(\n  // ...\n  // 在这里注册命名路由\n  routes: {\n    'list': (context) => const ListPage(),\n  },\n  home: const MyHomePage(\n    title: '程沛权',\n    avatar: 'https://avatars.githubusercontent.com/u/24845958?v=4',\n  ),\n);\n````push````dart\n// 地址栏依旧是 http://localhost:55368/#/\nNavigator.push(context, MaterialPageRoute(\n  builder: (context) {\n    return const ListPage();\n  },\n));\n````pushNamed``hash````dart\n// 地址栏会切换到 http://localhost:55368/#list\nNavigator.pushNamed(context, 'list');\n```[](https://book.flutterchina.club/chapter2/flutter_router.html#_2-4-1-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B)[](https://api.flutter.dev/flutter/material/material-library.html)[](https://api.flutter.dev/flutter/cupertino/cupertino-library.html)[](https://kendevlog.wordpress.com/2020/11/04/flutter_mat_vs_cup/)|     |     |\n| :-: | :-: |\n|     |     |\n|     |     |\n|     |     |[](https://api.flutter.dev/)|     |    |\n| :-: | :- |\n|     |    |\n|     |    |```bash\nThe '===' operator is not supported.dart(unsupported_operator)\n```[](https://juejin.cn/post/6844903983882960909)`unable to access android sdk add-on list`1) `Settings`\n2) `HTTP Proxy`\n   `Auto-detect proxy settings`\n3) `youtube.com`[](https://stackoverflow.com/questions/28918069/unable-to-access-android-sdk-add-on-list)![报错界面](https://cdn.chengpeiquan.com/img/2022/01/20220129104628.jpg?x-oss-process=image/interlace,1)```bash\nA GlobalKey was used multiple times inside one widge's child list…\n````home````dart\nMaterialApp(\n  title: 'Flutter Demo',\n  theme: ThemeData(primarySwatch: Colors.blueGrey),\n  darkTheme: ThemeData(primarySwatch: black),\n  routes: routes,\n);\n``````diff\nMaterialApp(\n  title: 'Flutter Demo',\n  theme: ThemeData(primarySwatch: Colors.blueGrey),\n  darkTheme: ThemeData(primarySwatch: black),\n  routes: routes,\n+  home: const HomePage(\n+    title: '程沛权',\n+    avatar: 'https://avatars.githubusercontent.com/u/24845958?v=4',\n+  ),\n);\n````console.log``print``debugPrint``print`[`print`](https://stackoverflow.com/a/69531249/15117507)`widget``component``return``widget````dart\nWidget Avatar(\n    {required String url, required double width}) {\n  return Container(\n    // ...\n  );\n}\n````class``widget````dart\nclass Avatar extends StatelessWidget {\n  const Avatar(\n      {Key? key, required this.url, required this.width})\n      : super(key: key);\n\n  final String url;\n  final double width;\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      // ...\n    );\n  }\n}\n```[](https://stackoverflow.com/questions/53234825/what-is-the-difference-between-functions-and-classes-to-create-reusable-widgets)[](https://www.youtube.com/watch?v=IOyq-eTRhvo)> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>>`Colors.black````bash\nThe argument type 'Color' can't be assigned to the parameter type 'MaterialColor?'.dartargument_type_not_assignable\n````MaterialColor````dart\nconst MaterialColor black = MaterialColor(\n  0xFF000000,\n  <int, Color>{\n    50: Color(0xFF000000),\n    100: Color(0xFF000000),\n    200: Color(0xFF000000),\n    300: Color(0xFF000000),\n    400: Color(0xFF000000),\n    500: Color(0xFF000000),\n    600: Color(0xFF000000),\n    700: Color(0xFF000000),\n    800: Color(0xFF000000),\n    900: Color(0xFF000000),\n  },\n);\n```[](https://blog.csdn.net/adojayfan/article/details/113728375)```dart\nclass Foo extends StatelessWidget {\n  const Foo(Key? key) : super(key: key);\n  // ...\n}\n````Foo()````bash\n1 positional argument(s) expected, but 0 found.\n```>`?``{}``?``key``()``({})````diff\nclass Foo extends StatelessWidget {\n-  const Foo(Key? key) : super(key: key);\n+  const Foo({Key? key}) : super(key: key);\n  // ...\n}\n````img``Image.network``NetworkImage`[](https://stackoverflow.com/questions/52242995/difference-in-networkimage-and-image-network)`object-fit````dart\nImage.network(\n  'https://example.com/cover.jpg?x-oss-process=image/interlace,1',\n  fit: BoxFit.cover,\n)\n```[](https://book.flutterchina.club/chapter3/img_and_icon.html#_3-3-%E5%9B%BE%E7%89%87%E5%8F%8Aicon)![209k 的浏览量…](https://cdn.chengpeiquan.com/img/2022/01/20220129164221.jpg?x-oss-process=image/interlace,1)[](https://stackoverflow.com/questions/58350235/add-border-to-a-container-with-borderradius-in-flutter)[](https://docs.flutter.dev/development/ui/assets-and-images)`pubspec.yaml``assets````yaml\nflutter:\n  # To add assets to your application, add an assets section, like this:\n  assets:\n    - assets/mock/\n````assets/mock/``mock``assets``/assets/``like this````bash\nhttp://localhost:52128/assets/mock/list.json\n``````dart\nawait DefaultAssetBundle.of(context).loadString('mock/list.json');\n````../````dart\n// 确保导入了这个库\nimport 'dart:convert';\n````jsonDecode()``json.decode()`[](https://stackoverflow.com/questions/51601519/how-to-decode-json-in-flutter/51601542#51601542)[](https://book.flutterchina.club/chapter1/dart.html#_1-4-4-%E5%BC%82%E6%AD%A5%E6%94%AF%E6%8C%81)[](https://book.flutterchina.club/chapter7/futurebuilder_and_streambuilder.html#_7-6-1-futurebuilder)[](https://flutterigniter.com/build-widget-with-async-method-call/)\n"
  },
  {
    "slug": "yidi-guonian",
    "title": "异地过年指南",
    "desc": "最近刷到好多小伙伴在说今年要留深圳/广州回不去，外卖到时又很贵，很纠结过年怎么办。我原本想着要不今年回去吧，我去年没回，结果前几天疫情每天都在+1，我妈倒是挺直接的叫我别回了，哈哈哈哈（正合我意呢），所以今年又在外面自己过年。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/01/20220123233134.jpg?x-oss-process=image/interlace,1",
    "content": "***1)\n\n2)\n\n3)\n\n4)\n\n5)\n\n6)\n\n7)***1)\n\n2)\n\n3)***1)\n\n2)\n\n3)\n\n4)***1)\n\n2)![金汤酸菜鱼](https://cdn.chengpeiquan.com/img/2022/01/20220123233546.jpg?x-oss-process=image/interlace,1)![花生猪手汤](https://cdn.chengpeiquan.com/img/2022/01/20220123233542.jpg?x-oss-process=image/interlace,1)![潮汕卤水](https://cdn.chengpeiquan.com/img/2022/01/20220123233543.jpg?x-oss-process=image/interlace,1)![可以做做蛋糕](https://cdn.chengpeiquan.com/img/2022/01/20220123233545.jpg?x-oss-process=image/interlace,1)![潮州炒香饭](https://cdn.chengpeiquan.com/img/2022/01/20220123233544.jpg?x-oss-process=image/interlace,1)![鳗鱼饭](https://cdn.chengpeiquan.com/img/2022/01/20220123233547.jpg?x-oss-process=image/interlace,1)![牛肉丸汤](https://cdn.chengpeiquan.com/img/2022/01/20220123233549.jpg?x-oss-process=image/interlace,1)![蒸笋饺](https://cdn.chengpeiquan.com/img/2022/01/20220123233551.jpg?x-oss-process=image/interlace,1)![炸韭菜饺子](https://cdn.chengpeiquan.com/img/2022/01/20220123233550.jpg?x-oss-process=image/interlace,1)![红烧猪手](https://cdn.chengpeiquan.com/img/2022/01/20220123233552.jpg?x-oss-process=image/interlace,1)![招财猪手](https://cdn.chengpeiquan.com/img/2022/01/20220123233548.jpg?x-oss-process=image/interlace,1)******1)\n\n2)\n\n3)\n\n4)\n\n5)***1)\n\n2)***1)\n\n2)\n\n3)\n\n4)\n"
  },
  {
    "slug": "a-week-time-of-a-markdown-engineer",
    "title": "Markdown工程师的一周",
    "desc": "马上就快过年了，最近才比较有时间把之前很多想搞一直没时间搞的东西弄一下，比如说最近一周在干的事情就是，补各种文档。我是没想到我一周能敲差不多 25 个小时的 Markdown … 几乎一天有 5 个小时在码字，天了噜…",
    "cover": "https://cdn.chengpeiquan.com/img/2022/01/20220121232301.jpg?x-oss-process=image/interlace,1",
    "content": "![最近一周的常用语言](https://cdn.chengpeiquan.com/img/2022/01/20220121232856.png)1)\n\n2)\n\n3) [](#关于复盘)\n\n4)\n\n5) [](https://chengpeiquan.com/cookbook)![自己做的菜](https://cdn.chengpeiquan.com/img/2021/02/20210218210634.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/cookbook)![目前已发出来的菜谱](https://cdn.chengpeiquan.com/img/2022/01/20220122012527.jpg?x-oss-process=image/interlace,1)![欢迎关注](https://cdn.chengpeiquan.com/img/2022/01/20220122013207.jpg?x-oss-process=image/interlace,1)```bash\n# 都是国内我就用 CNPM 吧，先全局安装\ncnpm i -g create-preset\n\n# 然后初始化就可以创建一套 Starter\npreset init\n```[](https://preset.js.org/zh/)![create-preset](https://cdn.chengpeiquan.com/img/2021/11/20220110155037.gif)[](https://preset.js.org/zh/docs.html#%E7%AE%A1%E7%90%86%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE)[](https://chengpeiquan.com/article/javascript-with-typescript-type-checking.html#%E4%BD%BF%E7%94%A8%E6%84%9F%E5%8F%97)`Vue``TypeScript``Vue``JavaScript``Webpack``Vue``TypeScript``Vite`[](https://cn.sli.dev/)1)![这个是复盘的大纲](https://cdn.chengpeiquan.com/img/2022/01/20220122004937.jpg?x-oss-process=image/interlace,1)2)![思考过程](https://cdn.chengpeiquan.com/img/2022/01/20220122004938.jpg?x-oss-process=image/interlace,1)3)[](https://vue3.chengpeiquan.com/)![如何保证也要提前想好](https://cdn.chengpeiquan.com/img/2022/01/20220122004939.jpg?x-oss-process=image/interlace,1)4)![变化了这些](https://cdn.chengpeiquan.com/img/2022/01/20220122004940.jpg?x-oss-process=image/interlace,1)5)![Vue 2 和 3 的对比](https://cdn.chengpeiquan.com/img/2022/01/20220122004941.jpg?x-oss-process=image/interlace,1)![Options API 和 Composition API 的对比](https://cdn.chengpeiquan.com/img/2022/01/20220122004942.jpg?x-oss-process=image/interlace,1)![JS 和 TS 的对比](https://cdn.chengpeiquan.com/img/2022/01/20220122004943.jpg?x-oss-process=image/interlace,1)![TS 的一个流行程度也是作为理由](https://cdn.chengpeiquan.com/img/2022/01/20220122004944.jpg?x-oss-process=image/interlace,1)![这是分析 Webpack 和 Vite 的区别](https://cdn.chengpeiquan.com/img/2022/01/20220122004945.jpg?x-oss-process=image/interlace,1)![这次是选择了 Vite](https://cdn.chengpeiquan.com/img/2022/01/20220122004946.jpg?x-oss-process=image/interlace,1)![UI 框架也做了一次更换](https://cdn.chengpeiquan.com/img/2022/01/20220122004947.jpg?x-oss-process=image/interlace,1)6)![一些亮点](https://cdn.chengpeiquan.com/img/2022/01/20220122004948.jpg?x-oss-process=image/interlace,1)7)![大佬们做榜样](https://cdn.chengpeiquan.com/img/2022/01/20220122004949.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "tsc-compiles-dts",
    "title": "TSC编译时指定生成d.ts的目录 并解决无法导入package.json和alias别名的问题",
    "desc": "虽然之前在构建 JS Library 的时候，也是有生成 `d.ts` 文件在输出目录，但总归比较凌乱，意思就是构建出来的 JS Library 和 DTS 文件都在同一级文件夹里。不是说不能用吧，总归看起来有点 low ，如果是单个 DTS 文件还好，但有时候构建出来会有好几个 DTS 这种情况下都放在一起总觉得有点别扭，所以今天想看一下能不能更优雅一点，存档在 types 文件夹里。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/11/20220121141631.jpg?x-oss-process=image/interlace,1",
    "content": "`d.ts`[](https://www.typescriptlang.org/tsconfig)```json\n{\n  \"compilerOptions\": {\n    \"resolveJsonModule\": true,\n    \"noEmit\": false,\n    \"rootDir\": \".\",\n    \"outDir\": \"./dist\",\n    \"emitDeclarationOnly\": true,\n    \"declaration\": true,\n    \"declarationDir\": \"./dist/types\"\n  },\n  \"include\": [\"./src\"],\n  \"exclude\": [\"node_modules\"]\n}\n````d.ts``dist/types``src``dist/types/src`![多了一级 src 目录](https://cdn.chengpeiquan.com/img/2021/11/20220121112339.jpg?x-oss-process=image/interlace,1)[](https://www.typescriptlang.org/tsconfig#rootDir)```diff\n{\n  \"compilerOptions\": {\n    \"resolveJsonModule\": true,\n    \"noEmit\": false,\n-    \"rootDir\": \".\",\n+    \"rootDir\": \"./src\",\n    \"outDir\": \"./dist\",\n    \"emitDeclarationOnly\": true,\n    \"declaration\": true,\n    \"declarationDir\": \"./dist/types\"\n  },\n  \"include\": [\"./src\"],\n  \"exclude\": [\"node_modules\"]\n}\n````dist/types``src``package.json`![修改 rootDir 之后报错了](https://cdn.chengpeiquan.com/img/2021/11/20220121113324.jpg?x-oss-process=image/interlace,1)`tsconfig``resolveJsonModule````diff\n{\n  \"compilerOptions\": {\n-    \"resolveJsonModule\": true,\n+    \"resolveJsonModule\": false,\n    \"noEmit\": false,\n    \"rootDir\": \".\",\n    \"outDir\": \"./dist\",\n    \"emitDeclarationOnly\": true,\n    \"declaration\": true,\n    \"declarationDir\": \"./dist/types\"\n  },\n  \"include\": [\"./src\"],\n  \"exclude\": [\"node_modules\"]\n}\n``````ts\n// e.g. src/global.d.ts\ndeclare module '*.json'\n```![完美达到预期](https://cdn.chengpeiquan.com/img/2021/11/20220121113455.jpg?x-oss-process=image/interlace,1)[](https://github.com/SitePen/dts-generator)`dist/types/index.d.ts``../foo/bar``alias``alias``@foo/bar``src/foo/bar``../../foo/bar`[](https://github.com/joonhocho/tscpaths)`tsconfig.json``paths````bash\npnpm add -D tscpaths\n````package.json``build````json\n{\n  \"scripts\": {\n    \"build\": \"tsc && tscpaths -p tsconfig.json -s ./src -o ./dist/types && vite build\"\n  }\n}\n````@foo/bar``../../foo/bar`[](https://stackoverflow.com/questions/55753163/package-json-is-not-under-rootdir/61426303#61426303)[](https://stackoverflow.com/questions/39722682/export-single-d-ts-from-several-typescript-files-entrypoint)[](https://stackoverflow.com/questions/59179787/tsc-doesnt-compile-alias-paths#comment112917582_59386941)\n"
  },
  {
    "slug": "javascript-with-typescript-type-checking",
    "title": "让你在编写 JavaScript 的时候也能享受 TypeScript 的类型检查",
    "desc": "现在前端没有几个不写 TypeScript 了吧，但是有时候还是不得不写 JS ，比如我最近写脚手架的时候，代码是直接跑在 Node Runtime 里，没有编译环节，所以用的依然还是 JavaScript 。然而，发现离开了类型限制之后，感觉要写很多注释才能保证一个项目的完整性，就很烦…",
    "cover": "https://cdn.chengpeiquan.com/img/2021/11/20220119155350.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://www.typescriptlang.org/docs/handbook/intro-to-js-ts.html)>```bash\nyarn add -D eslint-plugin-jsdoc\n````.eslintrc.js````js\nmodule.exports = {\n  // ...\n  extends: [\n    // 继承 JSDoc 的配置\n    'plugin:jsdoc/recommended',\n    // ...\n  ],\n  parserOptions: {\n    // 需要开启 module 支持\n    sourceType: 'module',\n    // ...\n  },\n  plugins: [\n    // 引入 JSDoc 插件\n    'jsdoc',\n    // ...\n  ],\n  // 这个是 JSDoc 的一个配置\n  settings: {\n    jsdoc: {\n      mode: 'typescript',\n    },\n  },\n}\n``````js\n// @ts-check\n\nconst foo = () => {\n  // ...\n}\n````ignore````js\n// @ts-check\n\n// @ts-ignore\nconst foo = () => {\n  // ...\n}\n````tsconfig.json``jsconfig.json`[](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html)```js\n/**\n * 打个招呼\n *\n * @param {string} name 对方的名字\n * @returns {string} 欢迎语句\n */\nconst greet = (name) => `Hello, ${name}!`\n```![VSCode 提示](https://cdn.chengpeiquan.com/img/2021/11/20220119153103.jpg?x-oss-process=image/interlace,1)![哈哈哈哈报错了！](https://cdn.chengpeiquan.com/img/2021/11/20220119155720.jpg?x-oss-process=image/interlace,1)```js\n/**\n * 打个招呼\n *\n * @param { { action: string; name: string } } option 选项\n *  action: 行为\n *  name: 对方的名字\n * @returns {string} 欢迎语句\n */\nconst greet = ({ action, name }) => `${action}, ${name}!`\n```![对象的注释也可以清晰提示](https://cdn.chengpeiquan.com/img/2021/11/20220119153658.jpg?x-oss-process=image/interlace,1)[](https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html)`.d.ts``types``index.d.ts`![目录结构](https://cdn.chengpeiquan.com/img/2021/11/20220119150609.jpg?x-oss-process=image/interlace,1)```ts\nexport interface Foo {\n  // ...\n}\n````@typedef``import````js\n/**\n * 获取 Foo 列表\n *\n * @typedef { import('../types').Foo } Foo\n * @returns {Foo[]} 一个 Foo 类型的数组\n */\nconst getFooList = () => {\n  // ...\n}\n```[](https://goulet.dev/posts/how-to-write-ts-interfaces-in-jsdoc/)[](https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html)\n"
  },
  {
    "slug": "git-commit-analytics",
    "title": "git-commit-analytics 分析Git Commit记录生成工作日报",
    "desc": "一个可以分析你的 Git 仓库 commit 记录的工具。它可以帮你生成一份工作日报 / 周报，或者你需要的更长时间范围的工作报告。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/01/20220103234230.jpg?x-oss-process=image/interlace,1",
    "content": "![git-commit-analytics](https://cdn.chengpeiquan.com/img/2022/01/20220103021254.gif)[](https://github.com/analyticsjs/git-commit-analytics/releases/latest)[](https://github.com/analyticsjs/git-commit-analytics/blob/main/CHANGELOG.md)`config.json````json\n{\n  \"lang\": \"en\",\n  \"authors\": [\"chengpeiquan\"],\n  \"dateRange\": [\"2021-12-01\", \"2022-01-31\"],\n  \"repos\": [\"D:\\\\Git\\\\git-commit-analytics\"],\n  \"format\": {\n    \"git-commit-analytics\": \"Git Commit Analytics\"\n  },\n  \"includes\": [\"feat\", \"fix\", \"docs\", \"style\", \"refactor\", \"test\", \"chore\"],\n  \"excludes\": [\"typo\", \"backup\", \"progress\"]\n}\n```|     |     |                      |\n| :-: | :-: | :------------------- |\n|     |     | `en``zh`             |\n|     |     |                      |\n|     |     | `00:00:00``23:59:59` |\n|     |     |                      |\n|     |     |                      |\n|     |     |                      |\n|     |     |                      |`authors``includes``excludes``authors``includes``excludes``markdown``.txt``markdown``.txt`|     |     |\n| :-: | :-: |\n|     |     |\n|     |     |\n|     |     |\n|     |     |\n|     |     |\n|     |     |\n|     |     |[](https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html)\n"
  },
  {
    "slug": "2021-year-end-summary",
    "title": "年终总结：2021年的一些回顾和2022年的一些小规划",
    "desc": "可真快啊又是一年年底了，虽然这一年博客没发几篇文章，不过整体的活跃情况其实是提升了，个人的变化也还是蛮大的，今年记忆比较深刻的事情有几件，让我梳理回顾一下。",
    "cover": "https://cdn.chengpeiquan.com/img/2022/01/20220103234636.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://github-contributions.vercel.app/)![这两年在 GitHub 的活跃情况](https://cdn.chengpeiquan.com/img/2022/01/20220104005113.jpg?x-oss-process=image/interlace,1)[](https://github.com/chengpeiquan/learning-vue3)[](https://chengpeiquan.com/article/rewrite-in-vite.html)![尤雨溪给我点赞啦](https://cdn.chengpeiquan.com/img/2022/01/20220104113148.jpg?x-oss-process=image/interlace,1)[](https://github.com/chengpeiquan/vite-plugin-banner)![使用量最多的那一天截图](https://cdn.chengpeiquan.com/img/2022/01/20220104115518.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/article/vue3-script-setup-finalization.html)![尤雨溪在文章下讨论](https://cdn.chengpeiquan.com/img/2022/01/20220104113454.jpg?x-oss-process=image/interlace,1)[](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLInputElement/webkitdirectory)![我参与的 Organizations](https://cdn.chengpeiquan.com/img/2022/01/20220104115744.jpg?x-oss-process=image/interlace,1)[](https://github.com/analyticsjs/git-commit-analytics)![新一年的规划](https://cdn.chengpeiquan.com/img/2022/01/20220104143643.jpg?x-oss-process=image/interlace,1)![我的小红书，美食博主了哈哈哈](https://cdn.chengpeiquan.com/img/2022/01/20220104122353.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/cookbook)![没想到居然还有证书，好期待！](https://cdn.chengpeiquan.com/img/2022/01/20220104004957.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "truffle",
    "title": "Truffle初探和踩坑笔记",
    "desc": "能找到的教程都好老，记录一版踩坑笔记，后面遇到类似的问题可以快速处理。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/10/20211012094643.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://www.trufflesuite.com/docs/truffle/overview)[](https://www.trufflesuite.com/boxes)>>[](https://dappradar.com/ethereum/games/axie-infinity)```bash\n# 全局安装 Truffle\nyarn global add truffle\n```|     |                                                 |\n| :-: | :---------------------------------------------: |\n|     | [](https://visualstudio.microsoft.com/zh-hans/) |\n|     |      [](https://github.com/nodejs/node-gyp)     |```bash\n# 查询当前的 Truffle 版本\ntruffle -v\n```[](https://marketplace.visualstudio.com/items?itemName=JuanBlanco.solidity)`truffle init`[](https://www.trufflesuite.com/docs/truffle/quickstart)[](https://www.trufflesuite.com/boxes/metacoin)```bash\n# 创建并进入 DEMO 项目文件夹\nmkdir truffle-demo && cd truffle-demo\n\n# 通过模板创建一个 Truffle 项目\ntruffle unbox metacoin\n``````bash\ntruffle-demo\n│\n│ # Solidity 合约目录\n├─contracts\n│\n│ # 部署脚本目录\n├─migrations\n│\n│ # 测试脚本目录\n├─test\n│\n│ # Truffle 配置文件\n└─truffle-config.js\n````truffle-config.js`[](https://www.trufflesuite.com/docs/truffle/reference/configuration)|     |     |\n| :-: | :-: |\n|     |     |\n|     |     |\n|     |     |\n|     |     |\n|     |     |[](https://www.trufflesuite.com/docs/truffle/reference/truffle-commands)[](https://github.com/trufflesuite/ganache-ui/releases)`truffle-config.js````js\nmodule.exports = {\n  // ...\n  networks: {\n    development: {\n      host: '127.0.0.1',\n      port: 7545,\n      network_id: '*',\n    },\n  },\n  // ...\n}\n```![Ganache UI](https://cdn.chengpeiquan.com/img/2021/10/20211012095732.jpg?x-oss-process=image/interlace,1)`truffle console``truffle develop`[](#使用-gui-调试)`truffle test``truffle develop````bash\nλ truffle test\n> Something went wrong while attempting to connect to the network at http://127.0.0.1:7545. Check your network configuration.\n\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 7545\n    - network_id > *\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" or \"--http\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n\nTruffle v5.4.14 (core: 5.4.14)\nNode v16.1.0\n````truffle-config.js``networks`1)![配置 Ganache 的工作区](https://cdn.chengpeiquan.com/img/2021/11/20211108105128.jpg?x-oss-process=image/interlace,1)2) `truffle-config.js``truffle test`![后续选择工作区来启动](https://cdn.chengpeiquan.com/img/2021/11/20211108142643.jpg?x-oss-process=image/interlace,1)`networks````bash\nλ truffle test\nUsing network 'test'.\n``````bash\nλ truffle test\nUsing network 'development'.\n```[](https://github.com/trufflesuite/truffle/blob/develop/packages/core/lib/commands/test/index.js#L141-L215)1. `networks.development`\n\n2. `networks.test`\n   `Develop.connectOrStart`1)```bash\nλ truffle develop\nTruffle Develop started at http://127.0.0.1:9545/\n```2)```bash\ntruffle(develop)> test\nUsing network 'develop'.\n\nCompiling your contracts...\n===========================\n````truffle build``.sol````bash\nSource file requires different compiler version (current compiler is 0.8.6+commit.11564f7e.Emscripten.clang) - note that nightly builds are considered to be strictly less than the released version\n```[](https://github.com/ethereum/solidity/releases)```diff\n- pragma solidity >=0.4.25 <0.7.0;\n+ pragma solidity >=0.4.25 <=0.8.6;\n``````diff\n- pragma solidity >=0.4.25 <0.7.0;\n+ pragma solidity ^0.8.6;\n```[](https://docs.soliditylang.org/en/develop/layout-of-source-files.html#version-pragma)`>=``^``package.json````bash\nVisibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n```[](https://docs.soliditylang.org/en/v0.7.0/070-breaking-changes.html#functions-and-events)`<0.7.0``^0.8.6``constructor````diff\ncontract Migrations {\n  // ...\n\n-  constructor() public {\n+  constructor() {\n    // ...\n  }\n\n  // ...\n}\n````constructor````bash\nSyntaxError: No visibility specified. Did you intend to add \"public\"?\n````truffle-config````js\nmodule.exports = {\n  compilers: {\n    solc: {\n      version: '^0.8.6',\n    },\n  },\n}\n``````solidity\nimport \"truffle/Assert.sol\";\nimport \"truffle/DeployedAddresses.sol\";\n``````bash\nSource \"truffle/Assert.sol\" not found: File import callback not supported\n```[](https://github.com/juanfranblanco/vscode-solidity/issues/193)\n"
  },
  {
    "slug": "vue3-script-setup-finalization",
    "title": "Vue3.0最新动态：script-setup定稿 部分实验性API将弃用",
    "desc": "从尤大的Twitter上获取到了最新的开发进展，期待已久的script-setup组件模式终于定稿，不再是实验性功能了，当然对比之前的实验性阶段也有一些新的变化，包括一些API被弃用，同时也有新的API补充进来代替原有的功能。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/07/20210705181949.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://github.com/chengpeiquan/learning-vue3/issues/107)[](https://chengpeiquan.com/article/vue3-script-setup.html)`3.1.4`[](https://twitter.com/youyuxi/status/1410744671848910851)`3.2.0````ts\n// 导入 useContext 组件\nimport { useContext } from 'vue'\n\n// 获取 context\nconst ctx = useContext()\n``````ts\n// 导入 useAttrs 组件\nimport { useAttrs } from 'vue'\n\n// 获取 attrs\nconst attrs = useAttrs()\n\n// attrs是个对象，和 props 一样，需要通过 key 来得到对应的单个 attr\nconsole.log(attrs.msg)\n````<slot />````html\n<template>\n  <!-- 子组件 -->\n  <ChildTSX>\n    <!-- 默认插槽 -->\n    <p>I am a default slot from TSX.</p>\n    <!-- 默认插槽 -->\n\n    <!-- 命名插槽 -->\n    <template #msg>\n      <p>I am a msg slot from TSX.</p>\n    </template>\n    <!-- 命名插槽 -->\n  </ChildTSX>\n  <!-- 子组件 -->\n</template>\n\n<script setup lang=\"ts\">\n  import ChildTSX from '@cp/context/Child.tsx'\n</script>\n``````ts\nimport { defineComponent, useSlots } from 'vue'\n\nconst ChildTSX = defineComponent({\n  setup() {\n    // 获取插槽数据\n    const slots = useSlots()\n\n    // 渲染组件\n    return () => (\n      <div>\n        // 渲染默认插槽\n        <p>{ slots.default ? slots.default() : '' }</p>\n\n        // 渲染命名插槽\n        <p>{ slots.msg ? slots.msg() : '' }</p>\n      </div>\n    )\n  },\n})\n\nexport default ChildTSX\n``````ts\n// 导入 useContext 组件\nimport { useContext } from 'vue'\n\n// 启用expose组件\nconst { expose } = useContext()\n\n// 定义一个想提供给父组件拿到的数据\nconst msg: string = 'Hello World!'\n\n// 显示暴露的数据，才可以在父组件拿到\nexpose({\n  msg,\n})\n``````ts\n// 导入 defineExpose 组件\nimport { defineExpose } from 'vue'\n\n// 定义数据\nconst msg: string = 'Hello World!'\n\n// 暴露给父组件\ndefineExpose({\n  msg,\n})\n````msg````ts\n// 导入 defineEmits 组件\nimport { defineEmits } from 'vue'\n\n// 获取 emit\nconst emit = defineEmits(['say-hi', 'change-name'])\n\n// 调用 emit 打招呼\nemit('say-hi', 'Hello!')\n\n// 调用 emit 改名\nemit('change-name', 'Tom')\n```1)```ts\n// 导入 defineProps 组件\nimport { defineProps } from 'vue'\n\n// 定义 props\ndefineProps({\n  name: {\n    type: String,\n    required: false,\n    default: 'Petter',\n  },\n  userInfo: Object,\n  tags: Array,\n})\n```2)```ts\n// 导入 defineProps 组件\nimport { defineProps } from 'vue'\n\n// 对象类型接口\ninterface UserInfo {\n  id: number\n  age: number\n}\n\n// 定义 props\ndefineProps<{\n  name: string\n  phoneNumber: number\n  userInfo: UserInfo\n  tags: string[]\n}>()\n```|    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |```ts\nimport { defineProps, withDefaults } from 'vue'\n\nwithDefaults(\n  defineProps<{\n    size?: number\n    labels?: string[]\n  }>(),\n  {\n    size: 3,\n    labels: () => ['default label'],\n  },\n)\n``````html\n<script setup lang=\"ts\">\n  const post = await fetch(`/api/post/1`).then((r) => r.json())\n</script>\n``````html\n<script lang=\"ts\">\n  import { defineComponent, withAsyncContext } from 'vue'\n\n  export default defineComponent({\n    async setup() {\n      const post = await withAsyncContext(\n        fetch(`/api/post/1`).then((r) => r.json()),\n      )\n\n      return {\n        post,\n      }\n    },\n  })\n</script>\n```[](https://github.com/vuejs/rfcs/pull/227#issuecomment-870105222)[](https://vue3.chengpeiquan.com/)\n"
  },
  {
    "slug": "requirement-design",
    "title": "简单的六个步骤 让你写出技术爱看的需求文档",
    "desc": "提需求”应该是每个同学在工作中最不可避免的三个字，有句很流行的话叫“人人都是产品经理”（源自一本产品书籍的书名），为什么这句话会流行起来？因为只要我们把这句话换个方式表达，本质上就是“人人都是需求方”，是不是瞬间感觉“对对对”！",
    "cover": "https://cdn.chengpeiquan.com/img/2023/01/20230107234550.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://requirement-design.ppt.chengpeiquan.com)![拖稿狂魔说的就是我了](https://cdn.chengpeiquan.com/img/2021/05/20210505010156.jpg?x-oss-process=image/interlace,1)>> <br>\n>\n> <br>> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>> <br>\n>\n> <br>\n>\n> ~~~~\n>\n> <br>\n>\n> <br>\n>\n> ~~~~1.\n\n2.\n\n3.\n\n4.\n\n5.\n\n6.> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>*\n*\n*\n*|    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |![金字塔分析法](https://cdn.chengpeiquan.com/img/2021/05/20210505020501.jpg?x-oss-process=image/interlace,1)1)\n\n2)\n\n3)```bash\n# 以故事征集活动为例：\n\n需求\n│\n├───内容生产者\n│    │\n│    ├───产出故事内容\n│    │   ├───富文本编辑\n│    │   ├───图片上传\n│    │   ├───视频上传\n│    │   ├───草稿箱\n│    │   └───发布预览\n│    │\n│    ├───推荐和曝光\n│    │   ├───首页推荐位\n│    │   ├───内容分发机制\n│    │   └───分享功能\n│    │\n│    └───粉丝互动\n│        ├───作品被点赞\n│        ├───作品被评论\n│        └───作品被打赏\n│\n└───内容消费者\n     │\n     ├───看到内容\n     │    ├───内容分发机制推荐\n     │    ├───首页推荐位推荐\n     │    └───其他用户分享\n     │\n     └───作者互动\n         ├───点赞作品\n         ├───评论作品\n         └───打赏作品\n```>>![知乎提问的时候就考虑了多个异常流程，并进行了正确引导](https://cdn.chengpeiquan.com/img/2021/05/20210505003033.png)![把冗长的文字转化为简明的图形表达](https://cdn.chengpeiquan.com/img/2021/05/20210505020355.jpg?x-oss-process=image/interlace,1)![积木大法能应付常见的布局排版](https://cdn.chengpeiquan.com/img/2021/05/20210505020316.jpg?x-oss-process=image/interlace,1)|    |           |\n| :- | :-------- |\n|    |           |\n|    |           |\n|    |           |\n|    |           |\n|    | [](#功能梳理) |\n|    | [](#流程设计) |>>>>>>![查漏补缺，把遗漏的细节补充起来](https://cdn.chengpeiquan.com/img/2021/05/20210505020140.jpg?x-oss-process=image/interlace,1)>>>>>![精益求精，不断完善你的需求，增强体验](https://cdn.chengpeiquan.com/img/2021/05/20210505020022.jpg?x-oss-process=image/interlace,1)>>>>>\n"
  },
  {
    "slug": "search-children-in-404-page",
    "title": "Node爬取宝贝回家最新走失儿童信息 生成接口API在404页面调用",
    "desc": "很久没采购成箱的东西了，大部分情况下都是零零散散的京东散件或者天猫半日达，一个购物袋就给我装了送过来，周末刚好在天猫超市买了箱东西，开箱一看，发现箱子里面印刷上了走失儿童的信息，感动！突然想起很久没有关注到这方面的信息。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/04/20210411154503.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://zhuanlan.zhihu.com/p/146604155)[](mailto:chengpeiquan@chengpeiquan.com)[](https://www.qq.com/404)![天猫超市在箱子里的公益信息](https://cdn.chengpeiquan.com/img/2021/04/20210411154352.jpg?x-oss-process=image/interlace,1)[](https://www.qq.com/404)[](https://www.baobeihuijia.com/)![宝贝回家官网的最新寻人模块](https://cdn.chengpeiquan.com/img/2021/04/20210411161843.jpg?x-oss-process=image/interlace,1)[](https://github.com/jsdom/jsdom)[](https://zhuanlan.zhihu.com/p/31547382)```js\n/**\n * 获取要查找的人物数据\n * @description 需要先从列表拿到人物详情页的链接，再去详情页爬取具体的数据回来\n */\nconst getSearchChildrenData = async () => {\n  let result = []\n\n  try {\n    const RES = await fetch(\n      `${__CONFIG__.domain}/list.aspx?tid=${__CONFIG__.tid}&photo=1&page=${__CONFIG__.page}`,\n    )\n    const RES_HTML = await RES.text()\n    const DOM = new JSDOM(RES_HTML)\n    const { window } = DOM\n    const { document } = window\n\n    // 提取列表的链接\n    const LINK_LIST = document.querySelectorAll('#ti1 dt a')\n\n    // 打乱顺序，提取被随机到的前三个\n    const SHUFFLE_LIST = shuffle([...LINK_LIST]).slice(0, 3)\n\n    // 因为还要继续请求，所以需要接受一个异步函数去继续处理\n    result = await getResultList(SHUFFLE_LIST)\n  } catch (e) {\n    console.log(e)\n  }\n\n  return result\n}\n``````js\n/**\n * 获取要查找的人物信息列表\n * @description 这里是最终要作为接口数据返回的列表\n */\nconst getResultList = async (domList) => {\n  const RESULT_LIST = []\n  for (let i = 0; i < domList.length; i++) {\n    // 拿到详情页的链接\n    const A = domList[i]\n    const URL = __CONFIG__.domain + A.getAttribute('href')\n\n    // 需要再去详情页爬取详细的人员信息\n    const INFO = await getInfo(URL)\n    RESULT_LIST.push(INFO)\n  }\n  return RESULT_LIST\n}\n``````js\n/**\n * 获取人物的详细信息\n * @description 缺失的信息统一处理为不详再返回\n */\nconst getInfo = async (url) => {\n  // 要返回的基本信息格式\n  const INFO = {\n    photo: '',\n    name: '不详',\n    gender: '不详',\n    birthday: '不详',\n    missingDate: '不详',\n    missingPlace: '不详',\n    feature: '不详',\n    url: url || __CONFIG__.domain,\n  }\n\n  // 更新详情页里的字段数据\n  try {\n    const RES = await fetch(url)\n    const RES_HTML = await RES.text()\n    const DOM = new JSDOM(RES_HTML)\n    const { window } = DOM\n    const { document } = window\n\n    // 提取照片\n    const PHOTO_DOM = document.querySelector('#_table_1_photo img')\n    const PHOTO = __CONFIG__.domain + PHOTO_DOM.getAttribute('src')\n    INFO['photo'] = PHOTO\n\n    // 提取个人信息\n    const INFO_DOM_LIST = document.querySelectorAll('#table_1_normaldivr li')\n    INFO_DOM_LIST.forEach((item, index) => {\n      // 提取过滤掉标签后的文本\n      const TEXT = item.innerHTML.replace(/<span>.*<\\/span>/, '') || '不详'\n\n      // 根据索引判断要存储的字段\n      switch (index) {\n        case 2:\n          INFO['name'] = TEXT\n          break\n        case 3:\n          INFO['gender'] = TEXT\n          break\n        case 4:\n          INFO['birthday'] = TEXT\n          break\n        case 6:\n          INFO['missingDate'] = TEXT\n          break\n        case 8:\n          INFO['missingPlace'] = TEXT\n          break\n        case 10:\n          INFO['feature'] = TEXT\n          break\n      }\n    })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return INFO\n}\n``````js\nconst getSearchChildrenData = require('../api/getSearchChildrenData')\n\n// 接口：宝贝回家\nrouter.get('/api/searchChildren', async (req, res) => {\n  const data = await getSearchChildrenData()\n  res.send(data)\n})\n```[](https://github.com/chengpeiquan/search-children-api-example)[](https://chengpeiquan.com/404)![404页面的效果预览](https://cdn.chengpeiquan.com/img/2021/04/20210411154858.jpg?x-oss-process=image/interlace,1)[](https://zhuanlan.zhihu.com/p/344492192)\n"
  },
  {
    "slug": "reclassify-articles",
    "title": "对文章又重新做了一次分类",
    "desc": "时隔两年，改版的时候去掉了分类，想了想，还是加回来吧，又把所有内容重新分了个类。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/03/20210316221139.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://chengpeiquan.com/article/blog-articles-sort-out.html)![最近每天都有朋友来问怎么养猫](https://cdn.chengpeiquan.com/img/2021/03/20210316215030.png)\n"
  },
  {
    "slug": "attending-a-wedding-alone",
    "title": "一个人参加婚礼，周围都不认识是什么感受？",
    "desc": "那天第一次参加户外婚礼，而且之前在接到邀请时已经得知全场只有新娘新娘是直接认识而且很熟悉的，出于社恐的本能我内心是打退堂鼓的，但出于友谊和对新娘的信任（相信她的安排），我觉得我必须去，然后那天就来了！",
    "cover": "https://cdn.chengpeiquan.com/img/2024/10/202410210113934.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://www.zhihu.com/question/57033654/answer/1767361670)![我那天的日记](https://cdn.chengpeiquan.com/img/2024/10/202410210118388.jpg?x-oss-process=image/interlace,1)![真正的好朋友会给你出谋划策](https://cdn.chengpeiquan.com/img/2024/10/202410210119662.jpg?x-oss-process=image/interlace,1)![养了三只猫的我](https://cdn.chengpeiquan.com/img/2024/10/202410210120120.jpg?x-oss-process=image/interlace,1)![一通主意下来，突然意识到我自己的爱好其实蛮广泛的](https://cdn.chengpeiquan.com/img/2024/10/202410210121375.jpg?x-oss-process=image/interlace,1)![刚到现场的时候，婚礼还没开始](https://cdn.chengpeiquan.com/img/2024/10/202410210122703.jpg?x-oss-process=image/interlace,1)![和师妹说我超忐忑](https://cdn.chengpeiquan.com/img/2024/10/202410210124128.jpg?x-oss-process=image/interlace,1)![得到了师妹的鼓励啊哈哈哈](https://cdn.chengpeiquan.com/img/2024/10/202410210124129.jpg?x-oss-process=image/interlace,1)![和师妹分享喜悦](https://cdn.chengpeiquan.com/img/2024/10/202410210126622.jpg?x-oss-process=image/interlace,1)![越来越镇定的我](https://cdn.chengpeiquan.com/img/2024/10/202410210128623.jpg?x-oss-process=image/interlace,1)![小黄抱着我的手午睡](https://cdn.chengpeiquan.com/img/2024/10/202410210130275.jpg?x-oss-process=image/interlace,1)<VideoPlayer\nurl=\"http://cdn.chengpeiquan.com/video/my-cat-is-sleeping-holding-my-hand.mp4\"\nposter=\"https://cdn.chengpeiquan.com/img/2024/10/202410210133313.jpg?x-oss-process=image/interlace,1\"\ntitle=\"猫抱着我的手睡觉\"\n/>![从紧张忐忑到完全放松了！](https://cdn.chengpeiquan.com/img/2024/10/202410210135369.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "vue3-script-setup",
    "title": "聊一聊Vue3.0的script-setup 以及全新的props/emits专属API",
    "desc": "今天想聊一聊 Vue 3.0 的 script-setup，以及目前三个很少被提及到的 API —— defineProps 、 defineEmit 和 useContext。截止到我撰写本文，它们在 Vue 3.0 的官网都还没有相关的用法说明，因为目前还属于实验性的新特性，什么时候会并入正式轨道，时间上还不清楚，但事实上在项目里已经可以使用起来了，自己体验了一段时间，真的爽！！！",
    "cover": "https://cdn.chengpeiquan.com/img/2021/02/20210305211036.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://chengpeiquan.com/article/vue3-script-setup-finalization.html)***> [](https://vue3.chengpeiquan.com/efficient.html)> <br>\n>\n> [](https://vue3.chengpeiquan.com/component.html)\n>\n> <br>\n>\n> <br>\n>\n> [](https://github.com/vuejs/vue-next/blob/master/CHANGELOG.md)\n>\n> <br>1.\n\n2.\n\n3.\n\n4.`.vue````html\n<!-- 标准组件格式 -->\n<script lang=\"ts\">\n  import { defineComponent } from 'vue'\n\n  export default defineComponent({\n    setup() {\n      // 要给 template 用的数据需要 return 出来才可以\n      return {}\n    },\n  })\n</script>\n```[](https://vue3.chengpeiquan.com/component.html#%E5%85%A8%E6%96%B0%E7%9A%84-setup-%E5%87%BD%E6%95%B0-new)`.vue````html\n<!-- 使用 script-setup 格式 -->\n<script setup lang=\"ts\">\n  // ...\n</script>\n``````html\n<!-- 标准组件格式 -->\n<script lang=\"ts\">\n  import { defineComponent } from 'vue'\n\n  // 需要先导入组件\n  import Header from '@cp/Header.vue'\n\n  export default defineComponent({\n    // 需要通过 components 才能启用子组件\n    components: {\n      Header,\n    },\n    setup() {\n      // ...\n    },\n  })\n</script>\n``````html\n<!-- 使用 script-setup 格式 -->\n<script setup lang=\"ts\">\n  import Header from '@cp/Header.vue'\n</script>\n```[](#什么是-defineprops-和-defineemit)![每一个“积木”都是一个组件](https://cdn.chengpeiquan.com/img/2021/01/20210303180727.png)```html\n<template>\n  <content :name=\"name\" @change-name=\"changeName\" />\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent, ref } from 'vue'\n  import Content from '@cp/Content.vue'\n\n  export default defineComponent({\n    components: {\n      Content,\n    },\n    setup() {\n      const name = ref<string>('Petter')\n\n      const changeName = (): void => {\n        name.value = 'Tom'\n      }\n\n      return {\n        name,\n        changeName,\n      }\n    },\n  })\n</script>\n``````html\n<script lang=\"ts\">\n  import { defineComponent } from 'vue'\n\n  export default defineComponent({\n    props: ['name'],\n    emits: ['changeName'],\n    setup(props, { emit }) {\n      setTimeout(() => {\n        emit('changeName', 'Tom')\n      }, 1000)\n    },\n  })\n</script>\n```[](https://vue3.chengpeiquan.com/communication.html#props-emits)`node_modules\\@vue\\runtime-core\\dist\\runtime-core.d.ts````ts\n/**\n * Compile-time-only helper used for declaring props inside `<script setup>`.\n * This is stripped away in the compiled code and should never be actually\n * called at runtime.\n */\n``````html\n<!-- 这是父组件，template 下发了 prop 和 emit -->\n<template>\n  <Child :name=\"name\" @change-name=\"changeName\" />\n</template>\n\n<script setup lang=\"ts\">\n  import { ref } from 'vue'\n  import Child from '@cp/Child.vue'\n\n  const name = ref<string>('Petter')\n\n  const changeName = (): void => {\n    name.value = 'Tom'\n  }\n</script>\n````return``components`>> `<script setup>````js\nimport { defineProps } from 'vue'\n\ndefineProps(['name', 'userInfo', 'tags'])\n````string[]`>```ts\nconst props = defineProps(['name', 'userInfo', 'tags'])\n\nconsole.log(props.name)\n```[](https://v3.cn.vuejs.org/guide/component-props.html#%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%9F%A5)```ts\ndefineProps({\n  name: String,\n  userInfo: Object,\n  tags: Array,\n})\n``````ts\ndefineProps({\n  name: {\n    type: String,\n    required: false,\n    default: 'Petter',\n  },\n  userInfo: Object,\n  tags: Array,\n})\n```[](https://vue3.chengpeiquan.com/communication.html#%E5%B8%A6%E6%9C%89%E7%B1%BB%E5%9E%8B%E9%99%90%E5%88%B6%E7%9A%84-props)[](https://vue3.chengpeiquan.com/communication.html#%E5%8F%AF%E9%80%89%E4%BB%A5%E5%8F%8A%E5%B8%A6%E6%9C%89%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84-props)`key: value````ts\ndefineProps<{ name: string }>()\n``````ts\ndefineProps<{\n  name: string\n  phoneNumber: number\n  userInfo: object\n  tags: string[]\n}>()\n``````ts\ninterface UserInfo {\n  id: number\n  age: number\n}\n\ndefineProps<{\n  name: string\n  userInfo: UserInfo\n}>()\n````?````ts\n// name 是可选\ndefineProps<{\n  name?: string\n  tags: string[]\n}>()\n```>```ts\nconst { name = 'Petter' } = defineProps<{\n  name?: string\n  tags: string[]\n}>()\n```>>```ts\n// 获取 emit\nconst emit = defineEmit(['chang-name'])\n\n// 调用 emit\nemit('chang-name', 'Tom')\n```[](https://vue3.chengpeiquan.com/communication.html#%E6%8E%A5%E6%94%B6-emits)|    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |```ts\n// 导入 useContext 组件\nimport { useContext } from 'vue'\n\n// 获取 context\nconst ctx = useContext()\n\n// 打印 attrs\nconsole.log(ctx.attrs)\n``````ts\n// 直接获取 attrs\nconst { attrs } = useContext()\n```[](https://vue3.chengpeiquan.com/component.html#setup-%E7%9A%84%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8)[](https://github.com/vuejs/rfcs/blob/script-setup-2/active-rfcs/0000-script-setup.md)```bash\n[@vue/compiler-sfc] <script setup> is still an experimental proposal.\nFollow its status at https://github.com/vuejs/rfcs/pull/227.\n\n[@vue/compiler-sfc] When using experimental features,\nit is recommended to pin your vue dependencies to exact versions to avoid breakage.\n```[](https://vue3.chengpeiquan.com)\n"
  },
  {
    "slug": "vite-plugin-banner",
    "title": "vite-plugin-banner：让Vite在打包的时候添加版权注释",
    "desc": "基于Vite，实现一个和webpack banner plugin一样功能的版权注释插件，可以为每个 chunk 文件头部添加 banner 注释。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/01/20210224102526.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://chengpeiquan.com/article/vue-cli-webpack-banner-plugin.html)```bash\nnpm install --save-dev vite-plugin-banner\n```|    |    |             |\n| :- | :- | :---------- |\n|    |    | [](#基础用法)   |\n|    |    | [](#可选参数格式) |```ts\n/**\n * 来自 `vite.config.[ts|js]` 的一些选项\n * @tips 从 `0.2.0` 开始支持此选项类型\n */\nexport interface BannerPluginOptions {\n  /**\n   * Banner 的注释内容\n   */\n  content: string\n\n  /**\n   * Vite.js 配置的输出目录\n   * @default `dist`\n   */\n  outDir?: string\n\n  /**\n   * 是否将错误信息打印到控制台\n   * @tips 从 `0.4.0` 开始支持此选项\n   * @default `false`\n   */\n  debug?: boolean\n}\n````String`[](https://vitepress.vuejs.org/)`Object`[](#可选参数格式)`vite.config.ts````ts\n// vite.config.ts\nimport banner from 'vite-plugin-banner'\n// 其他依赖...\n\nexport default defineConfig({\n  plugins: [banner('This is the banner content.')],\n})\n````npm run build``dist``vite.config.ts`[](https://vitejs.dev/config/#build-outdir)`vendor``js``css``app.b3a7772e.js````js\n/* This is the banner content. */\nvar e=Object.assign;import{M as t,d as a,u as r,c......\n````package.json````json\n{\n  \"name\": \"chengpeiquan.com\",\n  \"version\": \"0.1.0\",\n  \"description\": \"My personal website, technology stack based on Vue.js 3.0, and Vite 2.0, use Server Side Generation.\",\n  \"author\": \"chengpeiquan\",\n  \"homepage\": \"https://chengpeiquan.com/\"\n}\n````vite.config.ts``package.json````ts\n// vite.config.ts\nimport pkg from './package.json'\n// 其他依赖...\n\nexport default defineConfig({\n  plugins: [\n    banner(\n      `/**\\n * name: ${pkg.name}\\n * version: v${pkg.version}\\n * description: ${pkg.description}\\n * author: ${pkg.author}\\n * homepage: ${pkg.homepage}\\n */`,\n    ),\n  ],\n})\n````npm run build``app.6936be52.js````js\n/**\n * name: chengpeiquan.com\n * version: v0.1.0\n * description: My personal website, technology stack based on Vue.js 3.0, and Vite 2.0, use Server Side Generation.\n * author: chengpeiquan\n * homepage: https://chengpeiquan.com/\n */\nvar e=Object.assign;import{M as t,d as a,u as r,c......\n```- [](http://www.network-science.de/ascii/)\n\n- [](https://www.bootschool.net/ascii)```ts\n// vite.config.ts\nexport default defineConfig({\n  plugins: [\n    banner(`\n    ██   ██         ███████   ██      ██ ████████   ██    ██   ███████   ██     ██\n    ░██  ░██        ██░░░░░██ ░██     ░██░██░░░░░   ░░██  ██   ██░░░░░██ ░██    ░██\n    ░██  ░██       ██     ░░██░██     ░██░██         ░░████   ██     ░░██░██    ░██\n    ░██  ░██      ░██      ░██░░██    ██ ░███████     ░░██   ░██      ░██░██    ░██\n    ░██  ░██      ░██      ░██ ░░██  ██  ░██░░░░       ░██   ░██      ░██░██    ░██\n    ░██  ░██      ░░██     ██   ░░████   ░██           ░██   ░░██     ██ ░██    ░██\n    ░██  ░████████ ░░███████     ░░██    ░████████     ░██    ░░███████  ░░███████ \n    ░░   ░░░░░░░░   ░░░░░░░       ░░     ░░░░░░░░      ░░      ░░░░░░░    ░░░░░░░  \n    `),\n  ],\n})\n````npm run build``app.d9a287b8.js````js\n/*\n    ██   ██         ███████   ██      ██ ████████   ██    ██   ███████   ██     ██\n    ░██  ░██        ██░░░░░██ ░██     ░██░██░░░░░   ░░██  ██   ██░░░░░██ ░██    ░██\n    ░██  ░██       ██     ░░██░██     ░██░██         ░░████   ██     ░░██░██    ░██\n    ░██  ░██      ░██      ░██░░██    ██ ░███████     ░░██   ░██      ░██░██    ░██\n    ░██  ░██      ░██      ░██ ░░██  ██  ░██░░░░       ░██   ░██      ░██░██    ░██\n    ░██  ░██      ░░██     ██   ░░████   ░██           ░██   ░░██     ██ ░██    ░██\n    ░██  ░████████ ░░███████     ░░██    ░████████     ░██    ░░███████  ░░███████\n    ░░   ░░░░░░░░   ░░░░░░░       ░░     ░░░░░░░░      ░░      ░░░░░░░    ░░░░░░░\n     */\nvar e=Object.assign;import{M as t,d as a,u as r,c......\n``````ts\n// docs/.vitepress/config.ts\nimport { defineConfig } from 'vitepress'\nimport banner from 'vite-plugin-banner'\nimport pkg from '../../package.json'\n\nconst outDir = '../dist'\n\nexport default defineConfig({\n  // 指定打包的输出目录\n  outDir,\n\n  // 使用 Vite 插件\n  vite: {\n    plugins: [\n      // 请记住在这里使用 Object 格式的选项\n      banner({\n        outDir,\n        content: `/**\\n * name: ${pkg.name}\\n * version: v${pkg.version}\\n * description: ${pkg.description}\\n * author: ${pkg.author}\\n * homepage: ${pkg.homepage}\\n */`,\n      }),\n    ],\n  },\n  // ...\n})\n````.temp`\n"
  },
  {
    "slug": "rewrite-in-vite",
    "title": "重构于Vite",
    "desc": "从 2021 年元旦 Vite 发布 2.0 Beta 版就一直在关注 Vite 的动态，借着春节放假有时间，而且 Vue 3.0 和 Vite 2.0 都才大版本更新上线不久，预感后面会火，先开荒尝试一波，也当给以后工作上的业务先提前踩踩坑，对博客做了第三次重构，这一次把客户端和服务端都重新写了，由 PHP 的 LNMP 全家桶全部换成了前端侧的技术栈。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/02/20210219234631.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://zhuanlan.zhihu.com/p/351147547)![LightHouse的打分](https://cdn.chengpeiquan.com/img/2021/01/20210222114853.jpg?x-oss-process=image/interlace,1)![博客运作流程](https://cdn.chengpeiquan.com/img/2021/01/20210222154414.jpg?x-oss-process=image/interlace,1)1) [](https://github.com/vitejs/vite)\n   [](https://github.com/rollup/rollup)\n\n2) [](https://github.com/tailwindlabs/tailwindcss)\n   [](https://github.com/postcss/postcss)\n   [](https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*)\n\n3)\n\n4) [](https://github.com/highlightjs/highlight.js)\n   [](https://github.com/PrismJS/prism)\n\n5)[](https://vue3.chengpeiquan.com/)[](https://github.com/nuxt/nuxt.js)[](https://github.com/shuidi-fed/vapper)[](https://github.com/hexojs/hexo)[](https://github.com/chawyehsu)[](https://github.com/saberland/saber)[](https://github.com/vuejs/vuepress)[](https://github.com/vuejs/vitepress)[](https://vitejs.dev/guide/ssr.html)[](https://github.com/frandiox/vite-ssr)[](https://github.com/antfu/vite-ssg)> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>[](https://github.com/vuejs/vue-cli)[](https://vue3.chengpeiquan.com/)[](https://github.com/webpack/webpack)[](https://github.com/licess/lnmp)[](#技术栈的选择)1)\n\n2)\n\n3)\n\n4)\n\n5)`.vue``src/views``src/components``.md````html\nsrc ├─components │ ├─Footer.vue │ └─Header.vue └─views ├─article │ ├─[page].vue\n│ └─rewrite-in-vite.md ├─about.md └─index.vue\n```> <br>\n>\n> [](https://github.com/hannoeru/vite-plugin-pages)\n>\n> <br>\n>\n> <br>\n>\n> [](https://github.com/antfu/vite-plugin-md)\n>\n> <br>\n>\n> <br>\n>\n> [](https://github.com/antfu/vite-plugin-components)\n>\n> <br>[](https://github.com/stylus/stylus)[](https://github.com/vueComponent/ant-design-vue)[](https://www.zhihu.com/question/337939566)>```css\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n}\n``````html\n<div class=\"flex justify-center items-center w-40 h-40\"></div>\n```>>```css\n.img {\n  @apply w-full h-full object-cover;\n}\n``````css\n.img {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n  object-fit: cover;\n}\n```> `dark:xxxxx`<toggle-theme />>[](https://github.com/postcss/postcss)[](https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*)```css\na {\n  color: var(--fg-deeper);\n  text-decoration: none;\n\n  &:hover {\n    border-bottom: 1px solid var(--fg-light);\n  }\n}\n````.postcss``.pcss``<style lang=\"postcss\"></style>`[](#服务端渲染)`title``description``keyword`[](https://github.com/jonschlinkert/gray-matter)`.md````html\n---\ntitle: 这是页面的标题\ndesc: 这是页面的描述\nkeywords: 关键词1,关键词2,关键词3\n---\n\n下面是要书写的 Markdown 内容…\n```[](https://github.com/vueuse/head)`.vue``script````ts\nimport { useHead } from '@vueuse/head'\n\nuseHead({\n  meta: [\n    {\n      name: 'title',\n      content: '这是页面的标题',\n    },\n    {\n      name: 'description',\n      content: '这是页面的描述',\n    },\n    {\n      name: 'keywords',\n      content: '关键词1,关键词2,关键词3',\n    },\n  ],\n})\n```[](https://www.zhihu.com/question/20227463/answer/370662453)![测试我自己网站的速度](https://cdn.chengpeiquan.com/img/2021/02/20210221185258.jpg?x-oss-process=image/interlace,1)[](https://www.jsdelivr.com/?docs=gh)[](https://www.jsdelivr.com/features#gh)[](https://github.com/chengpeiquan/assets-storage)[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/vite.config.ts)`base````ts\nexport default defineConfig({\n  base: isDev\n    ? '/'\n    : 'https://cdn.jsdelivr.net/gh/chengpeiquan/chengpeiquan.com@gh-pages/',\n})\n```[](https://vitejs.dev/config/#base)[](https://github.com/Molunerfinn/PicGo)![PicGo 图床界面](https://cdn.chengpeiquan.com/img/2021/02/20210221185205.jpg?x-oss-process=image/interlace,1)[](https://github.com/Molunerfinn/PicGo/releases)`/wp-content/uploads/`[](#seo-优化)[](https://chengpeiquan.com/article/node-web-crawler)[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/src/main.ts)[](https://github.com/chengpeiquan/vue-baidu-analytics)[](https://github.com/chengpeiquan/vue-cnzz-analytics)1)```html\nsudo yum clean all sudo yum makecache sudo yum update sudo yum upgrade -y\n```2)```html\nsudo yum install npm sudo npm install -g n sudo n stable\n```3) [](https://github.com/yarnpkg/yarn)```html\nnpm i -g yarn\n```4) [](https://github.com/Unitech/pm2)\n   [](https://github.com/foreversd/forever)```html\nyarn global add pm2\n```[](https://github.com/expressjs/express)> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>\n>\n> <br>[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/.github/workflows/github-ci.yml)`secrets.XXXXXX``settings``Actions secrets`1) `on`\n   `develop`\n   `main`\n\n2) `jobs`\n   [](https://github.com/settings/tokens)\n\n3) `gh-pages`\n\n4) `SERVER_SSH_KEY`\n   [](https://www.alibabacloud.com/help/zh/doc-detail/51793.htm)\n   [](https://www.alibabacloud.com/help/zh/doc-detail/51796.htm)\n\n5) `SERVER_IP`\n   `ping`\n   `SERVER_IP`\n   `SERVER_IP_TEST`\n\n6) `TARGET`[](https://github.com/jenkinsci/jenkins)[](https://developer.mozilla.org/zh-CN/docs/Web/Progressive_web_apps)[](https://github.com/antfu/vite-plugin-pwa)> <br>\n>\n> ~~`vite.config.ts``base`[](https://github.com/antfu/vite-plugin-pwa/pull/25)~~\n>\n> <br>\n>\n> <br>\n>\n> ~~[](https://www.npmjs.com/package/@chengpeiquan/vite-plugin-pwa)~~\n>\n> <br>\n>\n> <br>\n>\n> <br>1. `scope`\n   `manifest.start_url`\n\n2. `base`[](https://chawyehsu.com/)[](https://antfu.me/)[](https://antfu.me/posts/rewrite-in-vite)[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/package.json)[](https://github.com/chengpeiquan/chengpeiquan.com/blob/main/vite.config.ts)[](https://github.com/chengpeiquan/chengpeiquan.com)\n"
  },
  {
    "slug": "refresh-token",
    "title": "基于OAuth2.0的refreshToken前端刷新方案与演示demo",
    "desc": "如今在涉及到用户登录的系统设计里面，基本上都是通过 OAuth 2.0 来设计授权，当你在调用登录接口的时候，可以看到在返回来的数据里面会有 2 个 Token：一个 accessToken 和一个 refreshToken 。为什么会有两个 Token，之间有什么区别？这其实是 OAuth 2.0 的四种方式 之一的 “凭证式”，一个是平时请求接口时的用户凭证，一个是用来刷新用户凭证的刷新凭证。",
    "cover": "https://cdn.chengpeiquan.com/img/2021/01/1.jpg?x-oss-process=image/interlace,1",
    "content": "`accessToken``refreshToken`[](http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html)`accessToken``accessToken`[](http://www.ruanyifeng.com/blog/2019/04/oauth_design.html)`accessToken``refreshToken``accessToken``refreshToken``accessToken`1) `accessToken`\n\n2)\n\n3) `refreshToken``accessToken`|    |    |\n| :- | :- |\n|    |    |\n|    |    |\n|    |    |```html\nsrc └─libs ├─axios │ ├─config.ts │ ├─index.ts │ └─instance.ts ├─refreshToken.ts\n└─setLoginInfoToLocal.ts\n```|    |    |\n| :- | :- |\n|    |    |\n|    |    |\n|    |    |\n|    |    |\n|    |    |[](https://github.com/chengpeiquan/refresh-token/tree/main/src/libs)```ts\nconst config: any = {\n  // 接口路径\n  baseURL: IS_DEV\n    ? 'http://127.0.0.1:12321/api'\n    : 'https://www.fastmock.site/mock/1c85c0d436ae044cf22849549ef471b8/api',\n\n  // 公共请求头\n  headers: {\n    'Content-Type': 'application/json; charset=UTF-8',\n    Authorization: 'Basic KJytrqad8765Fia',\n  },\n\n  // 默认的响应方式\n  responseType: 'json',\n\n  // 超时时间\n  timeout: 30000,\n\n  // 跨域的情况下不需要带上cookie\n  withCredentials: false,\n\n  // 调整响应范围，范围内的可以进入then流程，否则会走catch\n  validateStatus: (status: number) => {\n    return status >= 200 && status < 500\n  },\n}\n```[](https://github.com/chengpeiquan/refresh-token/blob/main/src/libs/axios/config.ts)[](http://www.axios-js.com/zh-cn/docs/#%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE)`instance````ts\ninstance.interceptors.request.use(\n  // 正常拦截\n  (config) => {\n    // 添加token\n    const LOCAL_TOKEN: string = ls.get('token') || ''\n    if (LOCAL_TOKEN) {\n      config.headers['Authorization'] = LOCAL_TOKEN\n    }\n\n    // 返回处理后的配置\n    return Promise.resolve(config)\n  },\n\n  // 拦截失败\n  (err) => Promise.reject(err),\n)\n``````ts\ninstance.interceptors.response.use(\n  // 正常响应\n  (res) => {\n    // 处理axios在IE 8-9下的坑爹问题\n    if (\n      res.data === null &&\n      res.config.responseType === 'json' &&\n      res.request.responseText !== null\n    ) {\n      try {\n        res.data = JSON.parse(res.request.responseText)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    // 登录失效拦截（主要针对refreshToken也失效的情况）\n    if (res.data.code === 1 && res.data.msg === '用户凭证已过期') {\n      // 告知用户\n      message.error(res.data.msg)\n\n      // 切去登录\n      try {\n        router.push({\n          name: 'login',\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    // 提取接口的返回结果，简化接口调用的编码操作\n    return Promise.resolve(res.data)\n  },\n\n  // 异常响应（统一返回一个msg提示即可）\n  (err) => Promise.reject('网络异常'),\n)\n\nexport default instance\n```[](https://github.com/chengpeiquan/refresh-token/blob/main/src/libs/axios/instance.ts)`instance.ts``instance``index````ts\n// 防止重复刷新的状态开关\nlet isRefreshing: boolean = false\n\n// 被拦截的请求列表\nlet requests: any[] = []\n``````ts\n// 读取Token的过期时间戳\nconst OLD_TOKEN_EXP: number = ls.get('token_expired_timestamp') || 0\n\n// 获取当前的时间戳\nconst NOW_TIMESTAMP: number = Date.now()\n\n// 计算剩余时间\nconst TIME_DIFF: number = OLD_TOKEN_EXP - NOW_TIMESTAMP\n``````ts\n// 是否有Token存储记录\nconst HAS_LOCAL_TOKEN: boolean = ls.get('token') ? true : false\n\n// 是否有Token过期时间记录\nconst HAS_LOCAL_TOKEN_EXP: boolean = OLD_TOKEN_EXP ? true : false\n``````ts\n// 获取接口url\nconst API_URL: string = config.url || ''\n``````ts\nif (\n  API_URL !== '/refreshToken' &&\n  HAS_LOCAL_TOKEN &&\n  HAS_LOCAL_TOKEN_EXP &&\n  TIME_DIFF <= 0\n) {\n  // 这里面是刷新的操作...\n}\n``````ts\n// 如果没有在刷新，则执行刷新\nif (!isRefreshing) {\n  // 打开状态\n  isRefreshing = true\n\n  // 获取新的token\n  const NEW_TOKEN: string = await refreshToken()\n\n  // 如果新的token存在，用新token继续之前的请求，然后重置队列\n  if (NEW_TOKEN) {\n    config.headers['Authorization'] = NEW_TOKEN\n    requests.forEach((callback: any) => callback(config))\n    requests = []\n  }\n  // 否则直接清空队列，因为需要重新登录了\n  else {\n    requests = []\n  }\n\n  // 关闭状态，允许下次继续刷新\n  isRefreshing = false\n}\n````Promise``resolve``reject``Promise``requests````ts\n// 并把刷新完成之前的请求都存储为请求队列\nreturn new Promise((resolve: any) => {\n  requests.push(() => {\n    resolve(config)\n  })\n})\n```[](https://github.com/chengpeiquan/refresh-token/blob/main/src/libs/axios/index.ts)`index````ts\n// 获取新的token\nconst NEW_TOKEN: string = await refreshToken()\n````refreshToken``accessToken``index``async / await``Promise````ts\nconst refreshToken = (): Promise<any> => {\n  return new Promise((resolve) => {\n    // 获取本地记录的刷新凭证\n    const REFRESH_TOKEN: string = ls.get('refresh_token') || ''\n\n    // 请求刷新\n    axios({\n      method: 'post',\n      url: '/refreshToken',\n      data: {\n        refreshToken: REFRESH_TOKEN,\n      },\n    })\n      .then((data: any) => {\n        // 存储token信息\n        const DATA: any = data.data\n        setLoginInfoToLocal(DATA)\n\n        // 返回新的token，通知那边搞定了\n        const NEW_TOKEN: string = `${DATA.tokenType} ${DATA.accessToken}`\n        resolve(NEW_TOKEN)\n      })\n      .catch((msg: string) => {\n        resolve('')\n      })\n  })\n}\n````setLoginInfoToLocal`[](https://github.com/chengpeiquan/refresh-token/blob/main/src/libs/refreshToken.ts)1) `git clone https://github.com/chengpeiquan/refresh-token.git`\n\n2) `npm install`\n\n3) `npm run api`\n\n4) `npm run serve``service``false``true````html\nservice ├─api │ ├─login.js │ ├─refreshToken.js │ └─test.js ├─createApi.js\n└─index.js\n```|    |    |\n| :- | :- |\n|    |    |\n|    |    |\n|    |    |[](https://chengpeiquan.github.io/refresh-token/)`src/libs/axios/config.ts``baseURL`[](https://www.fastmock.site/)[](https://marvengong.gitee.io/fastmock/)[](http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html)[](http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html)[](https://www.cnblogs.com/xuxinstyle/p/9675541.html)[](https://segmentfault.com/a/1190000016946316)\n"
  },
  {
    "slug": "vue-cnzz-analytics",
    "title": "vue-cnzz-analytics 基于Vue SPA项目的友盟CNZZ统计插件（支持Vue 3.0）",
    "desc": "一个专为SPA项目开发的友盟统计插件，支持Vue 3.0以及2.0版本同时使用，也可用于VuePress项目，支持在路由切换时，自动上报流量数据等功能。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/08/1-3.jpg?x-oss-process=image/interlace,1",
    "content": "> <br>\n>\n> [](https://vue3.chengpeiquan.com/)-\n\n-\n\n- [](https://router.vuejs.org/)\n\n-\n\n-\n\n-\n\n-*\n\n*\n\n*\n\n*[](https://analyticsjs.github.io/vue-cnzz-analytics/demo/vue2.html \"vue-cnzz-analytics demo for Vue 2.x\")[](https://analyticsjs.github.io/vue-cnzz-analytics/demo/vue3.html \"vue-cnzz-analytics demo for Vue 3.x\")|     |     |     |         |\n| :-: | :-: | :-: | ------- |\n|     |     |     |         |\n|     |     |     |         |\n|     |     |     | `false` |```bash\nnpm install vue-cnzz-analytics --save-dev\n``````html\n<script src=\"https://cdn.jsdelivr.net/npm/vue-cnzz-analytics/dist/vue-cnzz-analytics.min.js\"></script>\n``````js\nimport cnzzAnalytics from 'vue-cnzz-analytics'\n```[](https://analyticsjs.github.io/vue-cnzz-analytics/demo/js/main-for-vue2.js)> `cnzzAnalytics.default`\n>\n> `cnzzAnalytics````js\n// 启动插件\nVue.use(cnzzAnalytics, {\n  router: router,\n  siteIdList: [11111, 22222],\n  isDebug: false,\n})\n```[](https://analyticsjs.github.io/vue-cnzz-analytics/demo/js/main-for-vue3.js)> `cnzzAnalytics.default`\n>\n> `cnzzAnalytics````js\n/**\n * 初始化Vue\n */\ncreateApp(app)\n  // 启动路由\n  .use(router)\n\n  // 启动插件\n  .use(cnzzAnalytics, {\n    router: router,\n    siteIdList: [11111, 22222],\n    isDebug: false,\n  })\n\n  // 挂载到节点上\n  .mount('#app')\n```[](https://vuepress.vuejs.org/zh/)`/docs/.vuepress``enhanceApp.js`[](https://vuepress.vuejs.org/zh/guide/basic-config.html#%E5%BA%94%E7%94%A8%E7%BA%A7%E5%88%AB%E7%9A%84%E9%85%8D%E7%BD%AE)```js\nimport cnzzAnalytics from 'vue-cnzz-analytics'\n\nexport default ({ Vue, router }) => {\n  Vue.use(cnzzAnalytics, {\n    router: router,\n    siteIdList: [11111, 22222],\n    isDebug: false,\n  })\n}\n````$pushCNZZ``usePush`> [](#方法)`this````js\n// xxx.vue in Vue 2.0\nexport default {\n  // ...\n  mounted() {\n    this.$pushCNZZ.pv('/example-url/')\n  },\n  // ...\n}\n``````js\n// xxx.vue in Vue 3.0\nimport { getCurrentInstance } from 'vue'\n\nexport default {\n  setup() {\n    const app = getCurrentInstance()\n    app.appContext.config.globalProperties.$pushCNZZ.pv('/example-url/')\n  },\n}\n``````js\n// xxx.vue in Vue 3.0\nimport { getCurrentInstance } from 'vue'\n\nexport default {\n  setup() {\n    const { proxy } = getCurrentInstance()\n    proxy.$pushCNZZ.pv('/example-url/')\n  },\n}\n```>```js\n// xxx.vue in Vue 2.0\nimport { usePush } from 'vue-cnzz-analytics'\n\nexport default {\n  // ...\n  data() {\n    return {\n      // 创建钩子变量\n      cnzz: usePush(),\n    }\n  },\n  mounted() {\n    // 通过钩子变量去触发方法\n    this.cnzz.pv('/example-url/')\n  },\n  // ...\n}\n````const router = useRouter();````js\n// xxx.vue in Vue 3.0\nimport { usePush } from 'vue-cnzz-analytics'\n\nexport default {\n  setup() {\n    // 创建钩子变量\n    const cnzz = usePush()\n\n    // 通过钩子变量去触发方法\n    cnzz.pv('/example-url/')\n  },\n}\n```[](https://github.com/analyticsjs/vue-baidu-analytics)```js\nimport { usePush as useCnzz } from 'vue-cnzz-analytics'\nconst cnzz = useCnzz()\n```|    |               |\n| :- | :------------ |\n|    | [](#手动上报页面PV) |\n|    | [](#手动上报事件分析) |>|     |   |\n| :-: | - |\n|     |   ||     |     |     |               |\n| :-: | :-: | :-: | ------------- |\n|     |     |     | `/`           |\n|     |     |     | `http``https` |```js\nthis.$pushCNZZ.pv('/example-url/', 'https://example.com/example-from-url/')\n```|     |   |\n| :-: | - |\n|     |   ||     |     |     |                |\n| :-: | :-: | :-: | -------------- |\n|     |     |     | `首页banner`     |\n|     |     |     | `点击`           |\n|     |     |     | `bannerId_123` |\n|     |     |     |                |\n|     |     |     |                |```js\nthis.$pushCNZZ.event(\n  this.category,\n  this.action,\n  this.label,\n  this.value,\n  this.nodeId,\n)\n```[](https://github.com/analyticsjs/vue-cnzz-analytics/releases)[](https://github.com/analyticsjs/vue-cnzz-analytics/blob/master/LICENSE)[](https://github.com/chengpeiquan)\n"
  },
  {
    "slug": "vue-baidu-analytics",
    "title": "vue-baidu-analytics 基于Vue SPA项目的百度统计插件（支持Vue 3.0）",
    "desc": "一个专为SPA项目开发的百度统计插件，支持Vue 3.0以及2.0版本同时使用，也可用于VuePress项目，支持在路由切换时，自动上报流量数据等功能。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/12/1.jpg?x-oss-process=image/interlace,1",
    "content": "> <br>\n>\n> [](https://vue3.chengpeiquan.com/)-\n\n-\n\n- [](https://router.vuejs.org/)\n\n-\n\n-\n\n-\n\n-*\n\n*\n\n*\n\n*[](https://analyticsjs.github.io/vue-baidu-analytics/demo/vue2.html \"vue-baidu-analytics demo for Vue 2.x\")[](https://analyticsjs.github.io/vue-baidu-analytics/demo/vue3.html \"vue-baidu-analytics demo for Vue 3.x\")|     |     |     |         |\n| :-: | :-: | :-: | ------- |\n|     |     |     |         |\n|     |     |     |         |\n|     |     |     | `false` |```bash\nnpm install vue-baidu-analytics --save-dev\n``````html\n<script src=\"https://cdn.jsdelivr.net/npm/vue-baidu-analytics/dist/vue-baidu-analytics.min.js\"></script>\n``````js\nimport baiduAnalytics from 'vue-baidu-analytics'\n```[](https://analyticsjs.github.io/vue-baidu-analytics/demo/js/main-for-vue2.js)> `baiduAnalytics.default`\n>\n> `baiduAnalytics````js\n// 启动插件\nVue.use(baiduAnalytics, {\n  router: router,\n  siteIdList: ['aaaaaaaaaaaaaaaaaaa', 'bbbbbbbbbbbbbbbbbbb'],\n  isDebug: false,\n})\n```[](https://analyticsjs.github.io/vue-baidu-analytics/demo/js/main-for-vue3.js)> `baiduAnalytics.default`\n>\n> `baiduAnalytics````js\n/**\n * 初始化Vue\n */\ncreateApp(app)\n  // 启动路由\n  .use(router)\n\n  // 启动插件\n  .use(baiduAnalytics, {\n    router: router,\n    siteIdList: ['aaaaaaaaaaaaaaaaaaa', 'bbbbbbbbbbbbbbbbbbb'],\n    isDebug: false,\n  })\n\n  // 挂载到节点上\n  .mount('#app')\n```[](https://vuepress.vuejs.org/zh/)`/docs/.vuepress``enhanceApp.js`[](https://vuepress.vuejs.org/zh/guide/basic-config.html#%E5%BA%94%E7%94%A8%E7%BA%A7%E5%88%AB%E7%9A%84%E9%85%8D%E7%BD%AE)```js\nimport baiduAnalytics from 'vue-baidu-analytics'\n\nexport default ({ Vue, router }) => {\n  Vue.use(baiduAnalytics, {\n    router: router,\n    siteIdList: [\n      'aaaaaaaaaaaaaaaaaaa',\n      'bbbbbbbbbbbbbbbbbbb',\n      'ccccccccccccccccccc',\n    ],\n    isDebug: false,\n  })\n}\n````$pushBAIDU``usePush`> [](#方法)`this````js\n// xxx.vue in Vue 2.0\nexport default {\n  // ...\n  mounted() {\n    this.$pushBAIDU.pv('/example-url/')\n  },\n  // ...\n}\n``````js\n// xxx.vue in Vue 3.0\nimport { getCurrentInstance } from 'vue'\n\nexport default {\n  setup() {\n    const app = getCurrentInstance()\n    app.appContext.config.globalProperties.$pushBAIDU.pv('/example-url/')\n  },\n}\n``````js\n// xxx.vue in Vue 3.0\nimport { getCurrentInstance } from 'vue'\n\nexport default {\n  setup() {\n    const { proxy } = getCurrentInstance()\n    proxy.$pushBAIDU.pv('/example-url/')\n  },\n}\n```>```js\n// xxx.vue in Vue 2.0\nimport { usePush } from 'vue-baidu-analytics'\n\nexport default {\n  // ...\n  data() {\n    return {\n      // 创建钩子变量\n      baidu: usePush(),\n    }\n  },\n  mounted() {\n    // 通过钩子变量去触发方法\n    this.baidu.pv('/example-url/')\n  },\n  // ...\n}\n````const router = useRouter();````js\n// xxx.vue in Vue 3.0\nimport { usePush } from 'vue-baidu-analytics'\n\nexport default {\n  setup() {\n    // 创建钩子变量\n    const baidu = usePush()\n\n    // 通过钩子变量去触发方法\n    baidu.pv('/example-url/')\n  },\n}\n```[](https://github.com/analyticsjs/vue-cnzz-analytics)```js\nimport { usePush as useBaidu } from 'vue-baidu-analytics'\nconst baidu = useBaidu()\n```|    |               |\n| :- | :------------ |\n|    | [](#手动上报页面PV) |\n|    | [](#手动上报事件分析) |>|     |   |\n| :-: | - |\n|     |   ||     |     |     |     |\n| :-: | :-: | :-: | --- |\n|     |     |     | `/` |```js\nthis.$pushBAIDU.pv('/example-url/')\n```|     |   |\n| :-: | - |\n|     |   ||     |     |     |                |\n| :-: | :-: | :-: | -------------- |\n|     |     |     | `首页banner`     |\n|     |     |     | `点击`           |\n|     |     |     | `bannerId_123` |\n|     |     |     |                |```js\nthis.$pushBAIDU.event(this.category, this.action, this.label, this.value)\n```[](https://github.com/analyticsjs/vue-baidu-analytics/releases)[](https://github.com/analyticsjs/vue-baidu-analytics/blob/master/LICENSE)[](https://github.com/chengpeiquan)\n"
  },
  {
    "slug": "baidu-map-api-destroy",
    "title": "百度地图API实例销毁方案 可用于Vue单页面项目",
    "desc": "最近项目用到了百度地图的API，用倒是没啥毛病，就是发现用完之后留下来的垃圾太多 = = 项目是基于Vue做的，当时发现在需要百度地图的那个路由用完之后，切去其他页面，积累了很多DOM，并且再次进入会再次创建，在项目里体验越久，DOM树越累赘，并且由百度地图创建的定时器越攒越多。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/12/baidu-map.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2020/12/2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/12/1.png)![](https://cdn.chengpeiquan.com/img/2020/12/3.jpg?x-oss-process=image/interlace,1)`setTimeout``setInterval``setInterval(e._watchSize, 16)``const XXX = setInterval( .... )``clearInterval(XXX)````js\n/**\n * 销毁百度地图\n */\ntry {\n  // 注销地图（换成你初始化时定义的地图变量）\n  map = null\n\n  // 获取interval的最高ID然后遍历清除\n  const HIGHEST_INTERVAL_ID = setInterval(';')\n  for (let i = 0; i < HIGHEST_INTERVAL_ID; i++) {\n    clearInterval(i)\n  }\n\n  // 获取百度地图创建的DOM并销毁\n  const BAIDU_MAPS = document.querySelectorAll('.tangram-suggestion-main')\n  BAIDU_MAPS.forEach((item) => {\n    document.body.removeChild(item)\n  })\n} catch (e) {\n  // console.log(e);\n}\n````destroyed``onUnmounted``setInterval`\n"
  },
  {
    "slug": "group-buy-calculator",
    "title": "外卖拼单计算器：自动帮你计算合伙点外卖应该支付多少钱",
    "desc": "目前除了美团之外，其他的外卖app（像饿了么啊、瑞幸啊、麦当劳肯德基啊）都没提供自动计算账单的功能，自己每次拉excel算的蛋疼，所以写了这个，无需纠结红包、抵扣券等乱七八糟的减免，会自动计算折扣比例来得到最终账单。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/12/2-1.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://chengpeiquan.github.io/group-buy-calculator/)![](https://cdn.chengpeiquan.com/img/2020/12/1-1.png)\n"
  },
  {
    "slug": "vue-picture-cropper",
    "title": "Vue 3.0图片裁切插件：vue-picture-cropper",
    "desc": "开始玩Vue 3.0之后发现生态上要啥没啥，所以自己弄了一个，基于cropper.js，支持Vue 3.0的图片裁切工具组件，支持在Vue组件里按需引入，模板和实例也仅限在组件内使用，根据Vue 3.x的设计思想，官方也不推荐全局导入各类插件。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/12/1.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://vue3.chengpeiquan.com/)[](https://github.com/chengpeiquan/vue-picture-cropper)[](https://www.npmjs.com/package/vue-picture-cropper)[](https://chengpeiquan.github.io/vue-picture-cropper-demo/)![vue-picture-cropper-demo](https://chengpeiquan.github.io/vue-picture-cropper-demo/static/img/preview.jpg?x-oss-process=image/interlace,1)```\nnpm install --save-dev vue-picture-cropper\n``````js\n// xxx.vue\nimport VuePictureCropper, { cropper } from 'vue-picture-cropper'\n```[](https://vitejs.dev/)`ESM````js\n// xxx.vue（注意 from 后面的路径不同）\nimport VuePictureCropper, { cropper } from 'vue-picture-cropper/dist/esm'\n```|    |    |\n| :- | :- |\n|    |    |\n|    |    |`defineComponent````html\n<template>\n  <vue-picture-cropper\n    :boxStyle=\"{\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#f8f8f8',\n      margin: 'auto'\n    }\"\n    :img=\"pic\"\n    :options=\"{\n      viewMode: 1,\n      dragMode: 'crop',\n      aspectRatio: 16 / 9,\n      preview: preview,\n    }\"\n    @ready=\"ready\"\n  />\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent } from 'vue'\n  import VuePictureCropper, { cropper } from 'vue-picture-cropper'\n\n  export default defineComponent({\n    components: {\n      VuePictureCropper,\n    },\n    // …\n  })\n</script>\n````<input type=\"file\" >``button`- [](https://github.com/chengpeiquan/vue-picture-cropper-demo/blob/main/src/views/composition.vue)\n\n- [](https://github.com/chengpeiquan/vue-picture-cropper-demo/blob/main/src/views/options.vue)|    |    |                                                       |                  |\n| :- | :- | :---------------------------------------------------- | :--------------- |\n|    |    |                                                       |                  |\n|    |    |                                                       |                  |\n|    |    | [](https://github.com/fengyuanchen/cropperjs#options) |                  |\n|    |    | [](https://github.com/fengyuanchen/cropperjs#events)  |                  |\n|    |    |                                                       | `0.4.0`[](#预设模式) ||    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |\n|    |    |    |`cropper`|    |    |    |         |\n| :- | :- | :- | :------ |\n|    |    |    |         |\n|    |    |    |         |\n|    |    |    | `0.2.0` |\n|    |    |    |         |\n|    |    |    |         |`getDataURL``getBlob``getFile``0.3.0``Promise``async / await`|    |    |           |    |\n| :- | :- | :-------- | :- |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    |           |    |\n|    |    | `getFile` |    |```js\n// 设定裁切后指定尺寸为 400x250 ，通常可以为 banner 图裁切指定尺寸\nconst opt = {\n  width: 400,\n  height: 250,\n}\n\n// 裁切后会按照该尺寸生成结果\nconst dataURL = cropper.getDataURL(opt)\n``````js\ncropper.getBlob().then((blob) => {\n  console.log('blob', blob)\n})\n// 或者是 await cropper.getBlob()\n\ncropper.getFile().then((file) => {\n  console.log('file', file)\n})\n// 或者是 await cropper.getFile()\n```[](https://github.com/fengyuanchen/cropperjs#getcroppedcanvasoptions)`presetMode`|    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |\n|    |    |    |- `presetMode`\n  `options`\n  `options`\n\n- `presetMode`\n  `width`\n  `height`\n  `getDataURL`\n  `width`\n  `height`\n\n- `presetMode.width`\n  `presetMode.height`\n  `aspectRatio`\n\n- `presetMode.mode`[](https://chengpeiquan.github.io/vue-picture-cropper-demo/#/fixedSize)[](https://github.com/chengpeiquan/vue-picture-cropper-demo/blob/main/src/views/fixedSize.vue)- `presetMode`\n  `mode`\n  `fixedSize`\n- `presetMode`\n  `width`\n  `height`\n- `options`\n  `dragMode`\n  `move`\n- `options`\n  `cropBoxResizable`\n  `false`\n- `options`\n  `aspectRatio`\n  `width / height````html\n<template>\n  <vue-picture-cropper\n    :boxStyle=\"{\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#f8f8f8',\n      margin: 'auto',\n    }\"\n    :img=\"pic\"\n    :options=\"{\n      viewMode: 1,\n      dragMode: 'move',\n      aspectRatio: 1,\n      cropBoxResizable: false,\n    }\"\n    :presetMode=\"{\n      mode: 'fixedSize',\n      width: 50,\n      height: 50,\n    }\"\n  />\n</template>\n````png`[](https://chengpeiquan.github.io/vue-picture-cropper-demo/#/round)[](https://github.com/chengpeiquan/vue-picture-cropper-demo/blob/main/src/views/round.vue)- `presetMode`\n  `mode`\n  `fixedSize`\n- `presetMode`\n  `width`\n  `height`\n- `options`\n  `dragMode`\n  `move`\n- `options`\n  `cropBoxResizable`\n  `false`\n- `options`\n  `aspectRatio`\n  `1````html\n<template>\n  <vue-picture-cropper\n    :boxStyle=\"{\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#f8f8f8',\n      margin: 'auto',\n    }\"\n    :img=\"pic\"\n    :options=\"{\n      viewMode: 1,\n      dragMode: 'move',\n      aspectRatio: 1,\n      cropBoxResizable: false,\n    }\"\n    :presetMode=\"{\n      mode: 'round',\n      width: 100,\n      height: 100,\n    }\"\n  />\n</template>\n````cropper.xxxx`[](https://github.com/fengyuanchen/cropperjs#events)\n"
  },
  {
    "slug": "vue3",
    "title": "资料专题：Vue3.0学习教程与实战案例",
    "desc": "自从海贼王更新后，就开始正式用 `Vue 3.0` + `typescript` 写业务了，在经过这段时间的尝试，发现从测试到正式版本变化还是很大，很多过往的博文已经对不上了，还是踩了不少坑，这个过程也打了不少笔记，整理起来，供需要的朋友避坑，也免得以后自己忘记了。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/10/vue3.jpg?x-oss-process=image/interlace,1",
    "content": "![Vue3入门指南与实战案例](https://cdn.chengpeiquan.com/img/2021/01/vue3.png)[](https://vue3.chengpeiquan.com/)[](https://github.com/vuejs/vue-next/releases/tag/v3.0.0)`Vue 3.0``TypeScript`[](https://github.com/chengpeiquan/learning-vue3)\n"
  },
  {
    "slug": "vue-vscode-snippets",
    "title": "解决vscode保存vue文件时 压缩stylus代码为一行以及无法注释template的问题",
    "desc": "目前除了美团之外，其他的外卖app（像饿了么啊、瑞幸啊、麦当劳肯德基啊）都没提供自动计算账单的功能，自己每次拉excel算的蛋疼，所以写了这个，无需纠结红包、抵扣券等乱七八糟的减免，会自动计算折扣比例来得到最终账单。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/09/vue-vscode-snippets.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2020/09/4.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/09/3-1.jpg?x-oss-process=image/interlace,1)> [](https://www.jianshu.com/p/01d916ab6811)`Vue3snippets`![](https://cdn.chengpeiquan.com/img/2020/09/2-1.jpg?x-oss-process=image/interlace,1)`Vue3snippets``ctrl+/`![](https://cdn.chengpeiquan.com/img/2020/09/5.jpg?x-oss-process=image/interlace,1)> [](https://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-snippets)![](https://cdn.chengpeiquan.com/img/2020/09/7.jpg?x-oss-process=image/interlace,1)`Vue3snippets`![](https://cdn.chengpeiquan.com/img/2020/09/6.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "getboundingclientrect",
    "title": "使用getBoundingClientRect 针对scrollTop一直为0且documentElement无效的解决方案",
    "desc": "今天在上线一个移动端需求的时候，QA妹子跟我反馈在她们一部iPhone X上面出现了一个滚动加载会同时触发下拉刷新的bug…我就 ？？？……一个在顶部一个在底部这也能扯上关系？然后再进一步测试，发现这个坑是出现在自家app的内置webview上，在浏览器和微信等环境都正常。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/09/3.jpg?x-oss-process=image/interlace,1",
    "content": "`scrollTop````js\nconst SCROLL_TOP = document.documentElement.scrollTop || document.body.scrollTop\n````getBoundingClientRect`> [](https://chengpeiquan.com/article/js-go-to-top.html)![](https://cdn.chengpeiquan.com/img/2020/09/2.jpg?x-oss-process=image/interlace,1)> [](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect)```js\nconst INFO = document.querySelector('body').getBoundingClientRect()\nconsole.log(INFO)\n```![](https://cdn.chengpeiquan.com/img/2020/09/1.jpg?x-oss-process=image/interlace,1)`top``y``scrollTop``y``top````js\nconst SCROLL_TOP =\n  document.documentElement.scrollTop ||\n  document.body.scrollTop ||\n  -document.querySelector('.container').getBoundingClientRect().top\n````-(document.querySelector('.container').getBoundingClientRect().top)`\n"
  },
  {
    "slug": "rollupjs",
    "title": "JSSDK开发思路 基于RollupJS的经验记录",
    "desc": "虽然Rollup的推出时间应该是比Webpack早，但之前类库的工作都是公司其他前端部门负责维护，还真的没有去接触过它，直到最近自己要负责开发一个用于新业务线的JSBridge和JSLibrary，才对它有了一定的了解。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/08/1.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://www.rollupjs.com/)`cmd``powerShell``cmder````js\nmkdir rollup-demo && cd rollup-demo\n````npm init``src/main.js````json\n\"scripts\": {\n  \"build\": \"rollup -c rollup.config.js\"\n}\n``````js\nnpm install --save-dev rollup @rollup/plugin-node-resolve @rollup/plugin-babel @rollup/plugin-commonjs @rollup/plugin-json @rollup/plugin-alias rollup-plugin-terser rollup-plugin-banner @babel/core @babel/plugin-proposal-class-properties @babel/preset-env\n```|    |    |    |\n| :- | :- | :- |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |\n|    |    |    |`package.json``script``rollup.config.js``webpack.config.js``vue.config.js``rollup.config.js````js\nimport resolve from '@rollup/plugin-node-resolve'\nimport babel from '@rollup/plugin-babel'\nimport commonjs from '@rollup/plugin-commonjs'\nimport json from '@rollup/plugin-json'\nimport alias from '@rollup/plugin-alias'\nimport { terser } from 'rollup-plugin-terser'\nimport banner from 'rollup-plugin-banner'\n\nconst path = require('path')\nconst resolveDir = (dir) => path.join(__dirname, dir)\n\nexport default {\n  input: 'src/main.js',\n  output: [\n    {\n      file: `demo/js/demo.js`,\n      format: 'umd',\n      name: 'demo',\n    },\n    {\n      file: `dist/${process.env.npm_package_version}/demo.min.js`,\n      format: 'umd',\n      name: 'demo',\n      plugins: [terser()],\n    },\n  ],\n  plugins: [\n    resolve({\n      browser: true,\n    }),\n    babel({\n      babelHelpers: 'bundled',\n    }),\n    commonjs(),\n    json(),\n    alias({\n      entries: [{ find: '@', replacement: resolveDir('src') }],\n    }),\n    banner(\n      `name: <%= pkg.name %>\\nversion: v<%= pkg.version %>\\nauthor: <%= pkg.author %>`,\n    ),\n  ],\n}\n````npm run build``dist``demo`|    |    |\n| :- | :- |\n|    |    |\n|    |    |\n|    |    |\n|    |    |\n|    |    |\n|    |    |> [](https://www.rollupjs.com/guide/big-list-of-options/#%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BDcore-functionality)`lib/module``main.js````js\nclass Demo {\n  sayHi(name) {\n    console.log(`Hi, ${name}`)\n  }\n}\n\nconst demo = new Demo()\n\nexport default demo\n````.babelrc````js\n{\n  \"presets\": [\n    [\n      \"@babel/preset-env\",\n      {\n        \"modules\": false,\n        \"targets\": {\n          \"browsers\": \"> 1%, IE 11, not op_mini all, not dead\"\n        },\n        \"useBuiltIns\": \"usage\",\n        \"corejs\": 2\n      }\n    ]\n  ],\n  \"plugins\": [\n    \"@babel/plugin-proposal-class-properties\"\n  ]\n}\n````main.js``demo`![](https://cdn.chengpeiquan.com/img/2020/08/1-1.jpg?x-oss-process=image/interlace,1)`demo.xxx`![](https://cdn.chengpeiquan.com/img/2020/08/1-2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/08/2.jpg?x-oss-process=image/interlace,1)`wx.config(options);``wx.chooseImage()`\n"
  },
  {
    "slug": "my-netease",
    "title": "记录一下在网易五年来的工作与生活",
    "desc": "虽然加班很多，但回顾起来，工作内外还是很快乐的！",
    "cover": "https://cdn.chengpeiquan.com/img/2021/05/20210509201311.jpg?x-oss-process=image/interlace,1",
    "content": "![loading](https://cdn.chengpeiquan.com/img/2020/06/my-netease/loading.gif)![扫码预览](https://cdn.chengpeiquan.com/img/2020/06/my-netease/qrcode.jpg?x-oss-process=image/interlace,1)[](https://chengpeiquan.com/topic/netease/index.html)\n"
  },
  {
    "slug": "vue-cli-config-alias-error",
    "title": "记录vue.config设置alias无法生效的一次问题排查",
    "desc": "昨晚把Node和Vue-CLI等工具都升级到了最新版，create了一个新项目，因为之前干活的时候为了方便都是拷贝之前的配置文件下来，很多东西都是基于旧版的解构，所以想针对新版本也处理一份配置，于是只拿了vue.config.js来到新项目这边。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/05/4.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2020/05/1.jpg?x-oss-process=image/interlace,1)`@js``src/assets/js`![](https://cdn.chengpeiquan.com/img/2020/05/2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/05/3.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "canvas-movie-jitter-effect",
    "title": "电影故障抖动视觉效果实现：对大话手游愚人节专题的探究",
    "desc": "前几天愚人节的时候，大话手游官网上了一个专题，里面很多图片位置都使用了一个类似电影那种画面抖动的效果（目前只剩下一个slogan了，其他都下线了），很好奇是怎么实现的，于是扒了一下页面的源码，了解了一些实现思路，整理一下以后可能会用到。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/04/1.jpg?x-oss-process=image/interlace,1",
    "content": "[](https://dhxy.163.com/2020/gsq/)![](https://cdn.chengpeiquan.com/img/2020/04/1.gif)![](https://cdn.chengpeiquan.com/img/2020/04/1-1.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/04/2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/04/3.jpg?x-oss-process=image/interlace,1)```javascript\n// html\n<section class=\"section section-01\">\n  <div class=\"img\">\n    <img src=\"img/slogan.gif\">\n  </div>\n</section>\n``````javascript\n// html\n<section class=\"section section-02\">\n  <div class=\"img\">\n    <img src=\"img/0.png\">\n  </div>\n</section>\n\n// js\n<script type=\"text/javascript\">\n  const slogan = {\n    index: 0,\n    indexMax: 29,\n    time: 0,\n    dom: document.querySelector('.section-02 .img img'),\n    auto(speed){\n      let change = setInterval( () => {\n        // 动态调整图片帧显示\n        this.index < this.indexMax ? this.index++ : this.index = 0;\n        this.dom.setAttribute('src', `img/${this.index}.png`);\n\n        // 每运行10次动画周期后销毁定时器，进行垃圾回收后再重新创建\n        this.time += speed;\n        if ( this.time > this.indexMax * speed * 10) {\n          clearInterval(change);\n          change = null;\n          this.time = 0;\n          this.auto(speed);\n        }\n      }, speed);\n    }\n  }\n  slogan.auto(100);\n</script>\n``````javascript\n// html\n<section class=\"section section-03\">\n  <div class=\"img bg\"></div>\n</section>\n\n// js\n<script type=\"text/javascript\">\n  const sloganBg = {\n    index: 0,\n    indexMax: 29,\n    time: 0,\n    dom: document.querySelector('.section-03 .bg'),\n    auto(speed){\n      let change = setInterval( () => {\n        // 先移除上一帧的样式\n        this.dom.classList.remove(`bg-${this.index}`);\n\n        // 动态调整图片帧显示\n        this.index < this.indexMax ? this.index++ : this.index = 0;\n        this.dom.classList.add(`bg-${this.index}`);\n\n        // 每运行10次动画周期后销毁定时器，进行垃圾回收后再重新创建\n        this.time += speed;\n        if ( this.time > this.indexMax * speed * 10) {\n          clearInterval(change);\n          change = null;\n          this.time = 0;\n          this.auto(speed);\n        }\n      }, speed);\n    }\n  }\n  sloganBg.auto(100);\n</script>\n``````javascript\n// css\n<style>\n.go {\n  background-image: url('../img/sprites.png');\n  background-repeat: no-repeat;\n  animation: go steps(29, end) 3s infinite;\n}\n@keyframes go {\n  100% {\n    background-position: -0 -8729px;\n}\n</style>\n\n// html\n<section class=\"section section-04\">\n  <div class=\"img bg go\"></div>\n</section>\n```[](https://www.toptal.com/developers/css/sprite-generator)[](https://www.zhangxinxu.com/wordpress/2018/06/css3-animation-steps-step-start-end/)![](https://cdn.chengpeiquan.com/img/2020/04/4.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/04/5.jpg?x-oss-process=image/interlace,1)```javascript\n// html\n<section class=\"section section-05\">\n  <div class=\"img\"></div>\n</section>\n\n// js\n<script type=\"text/javascript\">\n  const sloganCanvas = {\n    index: 0,\n    indexMax: 29,\n    canvasWidth: 801,\n    canvasHeight: 301,\n    init(){\n      // 创建画布\n      const canvas = document.createElement('canvas');\n      canvas['width'] = this.canvasWidth;\n      canvas['height'] = this.canvasHeight;\n      document.querySelector('.section-05 .img').appendChild(canvas);\n\n      // 绘制内容\n      this.draw(this.index, canvas);\n    },\n    draw(index, canvas){\n      const context = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        // 绘制前先清空画布\n        context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n        // 然后再绘制当前帧\n        context.drawImage(img, 0, 0, this.canvasWidth, this.canvasHeight);\n\n        // 画完更换下一帧的索引\n        this.index < this.indexMax ? this.index++ : this.index = 0;\n        setTimeout( () => {\n          this.draw(this.index, canvas);\n        }, 100);\n      }\n      img.src = `img/${this.index}.png`;\n    }\n  }\n  sloganCanvas.init();\n</script>\n```[](https://chengpeiquan.github.io/canvas-movie-jitter-effect/index.html)\n"
  },
  {
    "slug": "aliyun-ecs-server-migration",
    "title": "阿里云ECS从香港迁移至国内节点实战教程",
    "desc": "之前因为贪图管理上的方便，一直把这个博客的服务器假设在香港那边，其实速度体验和稳定性啥的都挺好，不过最近打算给博客上线一个小程序版本，受于腾讯的政策要求，必须备案和接入https，考虑了一下，看了一下国内地区的ECS价格，刚好有优惠，所以决定做一个迁移。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/02/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2020/02/1-2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/2.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/3.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/5.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/6.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/7.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2020/02/8.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "api-design",
    "title": "接口设计：从前端开发的角度谈一谈接口规范",
    "desc": "从前端的角度，以一个接口消费者的身份来谈一谈如何设计一套比较合理的接口，本文主要分为两部分：“接口的基本数据格式”和“接口的业务数据格式”。本文的目的是想减少前后端对接过程中产生的沟通问题，还有优化一些可以避免的错误，甚至于你可以不提供接口文档，前端也能快速上手你的接口。",
    "cover": "https://cdn.chengpeiquan.com/img/2020/02/1.jpg?x-oss-process=image/interlace,1",
    "content": "`{ key: value }``data['key']``data.key`-`userInfo``user_info``userinfo``data1``data2`-`tags``tag``pictures``picture``名词 + list结尾````json\n{\n  \"tags\": [\"食物\", \"粤菜\", \"卤水\"],\n  \"memberList\": [\n    {\n      \"uid\": 111,\n      \"name\": \"张三\",\n      \"age\": 22\n    },\n    {\n      \"uid\": 222,\n      \"name\": \"李四\",\n      \"age\": 27\n    }\n  ]\n}\n```-|     |     |     |\n| :-: | :-: | :-: |\n|     |     |     |\n|     |     |     |\n|     |     |     |-`level``lv``message``msg``error``err``user id``uid``user name``un`-`{ \"name\": \"张三\" }``{ \"name\": \"李四\" }````json\n{\n  \"code\": 200,\n  \"data\": {\n    \"category\": \"news\",\n    \"data\": [\n      {\n        \"subject\": \"This is a subject.\",\n        \"content\": \"This is a content.\"\n      },\n      {\n        \"subject\": \"This is another subject.\",\n        \"content\": \"This is another content.\"\n      }\n    ]\n  }\n}\n````response.data``response.data.data.data[0].subject`|     |     |     |\n| :-: | :-: | :-: |\n|     |     |     |\n|     |     |     |\n|     |     |     |\n|     |     |     |\n|     |     |     |\n|     |     |     |**-`false``'false'`-```json\n{\n  \"pictures\": [\n    \"https://example.com/111.jpg?x-oss-process=image/interlace,1\",\n    \"https://example.com/222.jpg?x-oss-process=image/interlace,1\",\n    \"https://example.com/333.jpg?x-oss-process=image/interlace,1\"\n  ]\n}\n``````json\n{\n  \"articleList\": [\n    {\n      \"id\": 111,\n      \"subject\": \"This is a subject.\",\n      \"author\": \"Petter\",\n      \"date\": \"2020-01-01 11:11\",\n      \"content\": \"This is a content.\"\n    },\n    {\n      \"id\": 222,\n      \"subject\": \"This is another subject.\",\n      \"author\": \"Mary\",\n      \"date\": \"2020-01-02 12:12\",\n      \"content\": \"This is another content.\"\n    }\n  ]\n}\n```-```json\n{\n  \"userInfo\": {\n    \"uid\": 111,\n    \"name\": \"张三\",\n    \"age\": 24,\n    \"isVip\": true\n  }\n}\n```-```js\nconst KEY = data.key || 'key'\n``````js\nif ('key' in data) {\n  console.log(data.key)\n}\n````''``[]``{}``0``1``false``false`![新闻列表](https://cdn.chengpeiquan.com/img/2020/02/20210216230213.jpg?x-oss-process=image/interlace,1)```json\n{\n  \"newsList\": [\n    {\n      \"newsId\": 111,\n      \"subject\": \"这是一个新闻标题\",\n      \"source\": \"央视新闻\",\n      \"commentCount\": 1234,\n      \"createTime\": 1581850220403,\n      \"thumbs\": [\n        \"https://example.com/111.jpg?x-oss-process=image/interlace,1\",\n        \"https://example.com/222.jpg?x-oss-process=image/interlace,1\",\n        \"https://example.com/333.jpg?x-oss-process=image/interlace,1\"\n      ]\n    },\n    {\n      \"newsId\": 222,\n      \"subject\": \"这也是一个新闻标题\",\n      \"source\": \"人民日报\",\n      \"commentCount\": 2333,\n      \"createTime\": 1581850528657,\n      \"thumbs\": [\"https://example.com/444.jpg?x-oss-process=image/interlace,1\"]\n    }\n  ]\n}\n```-```json\n{\n  \"page\": 10,\n  \"articleList\": []\n}\n```-```json\n{\n  \"code\": 404,\n  \"message\": \"文章分类不存在\"\n}\n```*-```json\n{\n  \"Message\": {\n    \"messageval\": \"word_banned\",\n    \"messagestr\": \"抱歉，您填写的内容包含敏感信息而无法提交\"\n  }\n}\n``````json\n{\n  \"Message\": {\n    \"messageval\": \"thread_nonexistence\",\n    \"messagestr\": \"抱歉，指定的主题不存在或已被删除或正在被审核\"\n  }\n}\n```\n"
  },
  {
    "slug": "node-to-exe-by-pkg",
    "title": "把node脚本打包成exe文件 在无node环境的机器上运行",
    "desc": "有时候做的一些活动页面，会涉及到数据存储，虽然有一套公共业务接口，具备对应的数据导出，但是活动这种东西，一向没有那么中规中矩，总会有那么几次无法用公共接口来满足，遇到一些需要定制的情况，在赶工期的时候就只能是先满足数据录入需要部分，保证顺利上线，至于数据的导出，那往往是不在考虑范围的。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/10/1.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2021/02/20210216230555.jpg?x-oss-process=image/interlace,1)> [](https://www.npmjs.com/package/pkg)```javascript\n// 全局安装pkg\nnpm install -g pkg\n\n// 进入你的项目目录\ncd project\n\n// 执行打包exe文件，其中start.js就是你的入口文件\npkg -t win start.js\n\n// 如果你需要支持win/linux/mac多个平台的话，就执行这一句\npkg start.js\n```![](https://cdn.chengpeiquan.com/img/2021/02/20210216230610.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "vue-photo-preview",
    "title": "Vue插件安利：看大图插件vue-photo-preview",
    "desc": "最近一段时间，涉及到看大图功能的需求，用的比较多的一款看大图插件，PC和移动端适配良好，之前也用过一些别的插件，但还是这个方便，也比较轻量级。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/09/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://826327700.github.io/vue-photo-preview/demo/)\n\n<h2>使用方式</h2>\n\n```javascript\n// 在node，CD进项目目录，安装插件\nnpm install vue-photo-preview --save\n\n// 在main.js引入插件\nimport preview from 'vue-photo-preview';\nimport 'vue-photo-preview/dist/skin.css';\nVue.use(preview);\n\n// 在vue组件里，调用看大图功能，就可以直接生效\n<img src=\"xxx.jpg?x-oss-process=image/interlace,1\" preview=\"0\" />\n\n// 另外，如果图片是从接口请求回来的，记得在处理好数据后，刷新一下\nthis.$previewRefresh();\n```\n\n<h2>官方文档</h2>\n\n> [](https://github.com/826327700/vue-photo-preview#readme)\n"
  },
  {
    "slug": "ios-time-nan",
    "title": "iOS设备显示时间为NaN的原因及处理方法",
    "desc": "其实是个存在很久的问题啦，之前在IE的年代应该也是有遇到过的，只不过后来日常涉及到时间的需求都是用时间戳比较多，加上现在各种屏蔽IE访问（我们公司的项目都是引导使用chrome/firefox），所以给忘记了！",
    "cover": "https://cdn.chengpeiquan.com/img/2019/09/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "`年-月-日 时:分:秒``new Date('timeString').getTime()``年/月/日``年-月-日``年/月/日 时:分:秒``new Date('timeString').getTime()``timeString``replace(/-/g, '/');`\n"
  },
  {
    "slug": "blog-articles-sort-out",
    "title": "对博客的文章重新做了一下归类和整理",
    "desc": "最近几个月比较忙，虽然没怎么更新博客，不过还是保留着随手记笔记的习惯，也就是遇到坑啊或者一些觉得值得记录的东西，会随手简单的写到备忘录，等有空的时候再更新上来。恰逢中秋小长假，终于闲下来看一下博客了，没想到最近一个多月每天都还是有不少人来看，大部分是搜索过来的，而且搜的关键词，就是当初我遇到的那些坑！",
    "cover": "https://cdn.chengpeiquan.com/img/2019/09/1-3.jpg?x-oss-process=image/interlace,1",
    "content": ""
  },
  {
    "slug": "sublime-text-install-package",
    "title": "解决Sublime Text 3无法安装package的问题",
    "desc": "今天无聊更新了一下Sublime Text 3的最新版，结果坑爹了，无法使用Ctrl+Shift+P选择install安装各种插件，会报错 Package Control There are no packages available for installation Please see https://packagecontrol.io/docs/troubleshooting for help",
    "cover": "https://cdn.chengpeiquan.com/img/2019/07/1-3.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://packagecontrol.io/docs/troubleshooting)\n\n> [](https://github.com/HBLong/channel_v3_daily)\n"
  },
  {
    "slug": "node-web-crawler",
    "title": "网站改版迁移经验记录：基于node的爬虫编写",
    "desc": "以往的网站迁移服务器，数据方面的东西都是由服务端直接处理，不过这一次的需求比较特殊，就比如门户首页本来抓的是门户的资讯，但改版后是抓微博的动态，原来的资讯基本舍弃，只保留一部分专题和文章页，类似酱紫的一个改版迁移emmm，所以经过商讨，需要由前端来将需要保存的旧页面从客户端保存，再发布上传到新服务器上。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/07/1.jpg?x-oss-process=image/interlace,1",
    "content": "<h2>技术选型</h2>\n由前端保存，虽然说只有一部分，但如果用人工来处理那肯定是不行的，工作量还是比较大，所以必须用爬虫来爬取并保存；爬虫首选肯定是python，不过嘛，我不会 = = 不过好在现在JavaScript发展的越来越牛逼，我有node。|    |    |                                               |\n| :- | :- | :-------------------------------------------- |\n|    |    | [](http://nodejs.cn/api/)                     |\n|    |    | [](http://nodejs.cn/api/http.html)            |\n|    |    | [](http://nodejs.cn/api/http.html)            |\n|    |    | [](https://github.com/substack/node-mkdirp)   |\n|    |    | [](https://github.com/ashtuchkin/iconv-lite/) |\n|    |    | [](https://github.com/cheeriojs/cheerio/)     |```javascript\n// 引入需要的模块\nconst http = require('http')\nconst fs = require('fs')\nconst iconv = require('iconv-lite')\nconst mkdirp = require('mkdirp')\n\n// 设置要抓取的网页地址，这里是举例\nconst urlList = [\n  'http://chengpeiquan.com/14/0120/10/9KASP7MUSK324C3U.html',\n  'http://chengpeiquan.com/15/0214/12/3NPRSLDUQWMZ14C3U.html',\n  'http://chengpeiquan.com/16/0323/11/3S64W57MU00314C3U.html',\n]\n\n// 执行抓取\nurlList.forEach(function (url) {\n  // 获取文章的目录结构，提取文件夹层级与文件名\n  const folder = url.replace(/http:\\/\\/chengpeiquan\\.com\\//, '').split('/')\n  const filePath = `${folder[0]}/${folder[1]}/${folder[2]}`\n  const fileName = folder[3]\n  console.log(`文件目录：${filePath}\\t文件名称：${fileName}`)\n\n  // 在当前目录下，根据文章路径创建多级文件夹\n  mkdirp(filePath, function (err) {\n    err ? console.log(err) : console.log(`文件夹${filePath}创建成功！`)\n  })\n\n  // 获取文章内容并保存文件\n  http\n    .get(url, function (res) {\n      let html = ''\n      res.on('data', function (chunkBuffer) {\n        // 原网页是gb2312的编码，需要进行解码，避免乱码\n        html += iconv.decode(Buffer.from(chunkBuffer), 'gb2312')\n\n        /* ******************** 下面是开始优化文章内容 ******************** */\n\n        // 新的服务器只支持uft-8，所以要替换html文档内的编码格式\n        html = html.replace(/gb2312/gi, 'utf-8')\n\n        // 把整个文档处理为一行，才能随心所欲的替换\n        html = html.replace(/\\n/g, '【br】')\n\n        /*\n\t\t\t\t接下来就是各种replace了\n\t\t\t\t- 移除原来的全局头部\n\t\t\t\t- 移除原来的跟贴模块\n\t\t\t\t- 移除原来的相关新闻模块\n\t\t\t\t- 移除原来侧边栏的头条模块\n\t\t\t\t- 移除原来侧边栏的要闻模块\n\t\t\t\t- 换成新的统计代码\n\t\t\t\t- 过滤掉原有写死的文章域名变成相对地址\n\t\t\t*/\n\n        // 处理好内容，要把换行还原回来\n        html = html.replace(/【br】/g, '\\n')\n      })\n      res.on('end', function () {\n        // 将抓取的内容保存到本地文件中\n        fs.writeFile(`${filePath}/${fileName}`, html, function (err) {\n          if (err) {\n            console.log(`保存${filePath}/${fileName}时出现错误!`)\n          } else {\n            console.log(`文件${filePath}/${fileName}保存成功！`)\n          }\n        })\n      })\n    })\n    .on('error', function (err) {\n      console.log('错误信息：' + err)\n    })\n})\n```![](https://cdn.chengpeiquan.com/img/2019/07/1-1.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2019/07/2.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "vue-cli-webpack-banner-plugin",
    "title": "基于Vue-CLI 3.0 让WebPack在打包的时候添加版权注释",
    "desc": "其实以前就知道说有这么个东西可以在打包后添加一个版权注释，但是一直没有去用。不过最近觉得最好还是配置一下，版权不版权倒是其次，毕竟打包后都是混淆的东西，要抄也不好抄啊不是，主要还是给一些有需要的人知道说这个东西是谁写的，有什么问题可以咨询谁，或者说以后有什么类似的需求，是不是可以再次找谁做。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/04/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "```javascript\nconst webpack = require('webpack')\n// ……\n\nmodule.exports = {\n  // ……\n  configureWebpack: (config) => {\n    if (process.env.NODE_ENV !== 'production') return\n    return {\n      plugins: [new webpack.BannerPlugin(' The roject developed by 2dang! ')],\n    }\n  },\n}\n```![](https://cdn.chengpeiquan.com/img/2019/04/1.jpg?x-oss-process=image/interlace,1)> [](https://www.webpackjs.com/plugins/banner-plugin/)\n"
  },
  {
    "slug": "css-conf-5",
    "title": "第五届CSS开发者大会：我的第一次参加开发者大会",
    "desc": "2019年3月30日，在深圳，看了几年张老师的博客，今天终于见到大神真人，开心！",
    "cover": "https://cdn.chengpeiquan.com/img/2021/09/20210920173259.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2021/09/20210920174134.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174135.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174136.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174137.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174138.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174139.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174140.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174141.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174142.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174143.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174144.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174145.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2021/09/20210920174146.jpg?x-oss-process=image/interlace,1)\n"
  },
  {
    "slug": "editorconfig",
    "title": "项目代码风格统一神器 editorconfig的作用与配置说明",
    "desc": "团队协作，或者有时候你从GitHub或者其他地方拷贝人家的组件插件下来，想修改，发现代码风格不一致，比如自己习惯2个空格的缩进，但别人是4个空格，或者直接用tab，这就emmm了不是…",
    "cover": "https://cdn.chengpeiquan.com/img/2019/03/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2019/03/2-2.jpg?x-oss-process=image/interlace,1)> [](https://editorconfig.org/)```javascript\n# http://editorconfig.org\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 80\ntrim_trailing_whitespace = true\n\n[*.md]\nmax_line_length = 0\ntrim_trailing_whitespace = false\n```> [](https://www.jianshu.com/p/00ac7bd5e74e)\n"
  },
  {
    "slug": "vue-devserver-proxy",
    "title": "基于Vue-CLI 3.0配置webpack的跨域限制代理功能devServer.proxy",
    "desc": "接口跨域一直是个头疼的问题，之前的业务页面都基于一套限制比较少的接口在交互，所以大部分还是写完静态页面然后替换数据部分，直接打包到测试环境即可，所以一直不太在意本地调试的问题。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/03/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://cli.vuejs.org/zh/config/#devserver-proxy)> [](https://webpack.docschina.org/configuration/dev-server/)![](https://cdn.chengpeiquan.com/img/2019/03/2-1.jpg?x-oss-process=image/interlace,1)```javascript\n// vue.config.js\n// 配置所有无法请求成功的url都指向预设的代理网站\nmodule.exports = {\n  // ……\n  devServer: {\n    proxy: 'https://chengpeiquan.com',\n  },\n  // ……\n}\n\n// xxx.vue文件里，以axios请求为例\n// url必须是从根目录开始的相对地址，这样在localhost找不到这个接口的情况下，代理就会去预设的chengpeiquan.com请求真正的接口地址\n// 这样打包到正式环境也是可以正常获取根目录下的接口请求\nthis.$ajax({\n  method: 'post',\n  url: '/api/index.php?module=newslist',\n  data: {\n    // ……\n  },\n  responseType: 'json',\n})\n  .then((response) => {\n    // ……\n  })\n  .catch((error) => {\n    // ……\n  })\n``````javascript\n// vue.config.js\n// 配置以/api开头的url都指向预设的代理网站\nmodule.exports = {\n  // ……\n  devServer: {\n    proxy: {\n      '/api': {\n        target: 'https://2dang.com',\n        ws: true,\n        changOrigin: true,\n      },\n    },\n  },\n  // ……\n}\n\n// main.js\n// 设置接口的默认域名，判断当前环境，生产环境需要返回接口的域名进行拼接，不然上线后请求的路径会错误\nexport const apiDomain = (domain) => {\n  process.env.NODE_ENV === 'production'\n    ? (domain = 'https://2dang.com')\n    : (domain = '')\n  return domain\n}\nVue.prototype.$apiDomain = apiDomain\n\n// xxx.vue文件里，以axios请求为例\n// url必须是从根目录开始的相对地址，这样在localhost找不到这个接口的情况下，代理就会去预设的2dang.com请求真正的接口地址\n// 而拼接了this.$apiDomain()之后，打包到正式环境会拼接好接口的域名，这样就不影响线上的访问了\n// 这样打包到正式环境也是可以正常获取根目录下的接口请求\nthis.$ajax({\n  method: 'post',\n  url: this.$apiDomain() + '/api/index.php?module=newslist',\n  data: {\n    // ……\n  },\n  responseType: 'json',\n})\n  .then((response) => {\n    // ……\n  })\n  .catch((error) => {\n    // ……\n  })\n```\n"
  },
  {
    "slug": "vue-skeleton",
    "title": "基于Vue-CLI 3.0的骨架屏实现方案",
    "desc": "大型Project的首次载入速度一般会比较慢，虽然Vue可以配置路由懒加载，但有时候打包出来的chunk还是会比较大，这个时候可以结合骨架屏来提高用户等待加载时的体验。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/03/1.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2019/03/2.jpg?x-oss-process=image/interlace,1)> [](https://github.com/lavas-project/vue-skeleton-webpack-plugin)```javascript\n//引入插件\nconst SkeletonWebpackPlugin = require('vue-skeleton-webpack-plugin')\n\nmodule.exports = {\n  //其他的基础配置\n  //下面开始配置插件相关的东西，可参考官方文档\n  configureWebpack: (config) => {\n    config.plugins.push(\n      new SkeletonWebpackPlugin({\n        webpackConfig: {\n          entry: {\n            app: path.join(__dirname, './src/Skeleton.js'),\n          },\n        },\n        minimize: true,\n        quiet: true,\n      }),\n    )\n  },\n  //这个是让骨架屏的css分离，直接作为内联style处理到html里，提高载入速度\n  css: {\n    extract: true,\n    sourceMap: false,\n    modules: false,\n  },\n}\n``````javascript\n// - Skeleton.js\nimport Vue from 'vue'\nimport Skeleton from './Skeleton.vue'\n\nexport default new Vue({\n  components: { Skeleton },\n  render: (h) => h(Skeleton),\n})\n```> [](https://github.com/chengpeiquan/vue-skeleton)\n"
  },
  {
    "slug": "vue-params-lost",
    "title": "Vue路由params丢失、错误路由白屏的解决方案",
    "desc": "使用带params的路由的时候，如果params不正确，路由就不会渲染，导致页面出现空白，本来想跟query一样，指定其中一个query为默认值，没想到并不能如己所愿，不过最终问题还是解决了，采用了一个路由的api来判断当前路由是否存在，顺带解决了其他非正常路由的指向问题。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/02/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2019/02/1.jpg?x-oss-process=image/interlace,1)> [](https://router.vuejs.org/zh/api/#路由对象属性)```javascript\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.length === 0) {\n    from.name ? next({ name: from.name }) : next('/')\n  } else {\n    next()\n  }\n})\n```\n"
  },
  {
    "slug": "github-upload-delete",
    "title": "Github发布项目与删除文件夹操作指令",
    "desc": "Git的指令还是记不太住，发篇文帮助记忆，记录起来方便查阅。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/02/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "```javascript\ngit clone https://github.com/xxx/xxxx.git\n```\n\n```javascript\ncd myGit\n```\n\n```javascript\ngit add .\n```\n\n```javascript\ngit commit -m \"提交信息注释\"\n```\n\n```javascript\ngit push -u origin master\n```\n\n```javascript\ngit clone https://github.com/xxx/xxxx.git\ncd myGit\n```\n\n```javascript\ndir\n```\n\n```javascript\ngit rm -r --cached oldGit\n```\n\n```javascript\ngit commit -m \"删除了oldGit\"\n```\n\n```javascript\ngit push -u origin master\n```\n"
  },
  {
    "slug": "js-go-to-top",
    "title": "原生JS实现带动画的返回顶部按钮",
    "desc": "添加的第一个参数destination，终点位置，含义是指终点坐标与窗口顶部的Y轴距离，非必须，默认为0，也就是直接返回到窗口顶部。通过window.scrollY > destination的条件判断，如果当前窗口滚动距离比预设的终点距离大，就执行滚动，否则就结束，到达目的地。",
    "cover": "https://cdn.chengpeiquan.com/img/2019/01/1.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://stackoverflow.com/questions/21474678/scrolltop-animation-without-jquery)\n\n```javascript\nfunction goToTop(destination = 0, duration = 500) {\n  const scrollStep = -window.scrollY / (duration / 15)\n  const scrollInterval = setInterval(function () {\n    if (window.scrollY != 0 && window.scrollY > destination) {\n      window.scrollBy(0, scrollStep)\n    } else {\n      clearInterval(scrollInterval)\n    }\n  }, 15)\n}\n```\n\n```javascript\n// 方式一：直接获取文章列表与页面顶部的高度距离\ndocument.querySelector('#article-list').offsetTop\n\n// 方式二：获取元素的top/right/bottom/left/x/y/width/height信息，再从里面拿需要的数值\ndocument.querySelector('#article-list').getBoundingClientRect()\n```\n"
  },
  {
    "slug": "document-write-optimize-webpack",
    "title": "针对document.write渲染的优化方案（适用webpack按需加载）",
    "desc": "write方法去渲染html，更多情况是适合手写页面的年代，现在前端开发都是通过node+webpack工程化打包，那么遇到必须write又不想write的情况应该怎么办？最近刚好对手里的一个项目做了渲染优化，在这里顺便做个总结，讲一下对`document.write`渲染html的一个优化思路，可以结合到MVVM框架（如Vue.js）里去使用。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/12/1.jpg?x-oss-process=image/interlace,1",
    "content": "`document.write``document.write``document.write``document.write````javascript\n<ul>\n  [loop]\n  <li>\n    <a href=\"{url}\">\n      <img src=\"{pic}\">\n      <p>{title}</p>\n      <p>{dateline}</p>\n    </a>\n  </li>\n  [/loop]\n</ul>\n``````javascript\n<script type=\"text/javascript\">\nvar articleData = [\n  [index=1]\n  {\n    \"tid\": \"{id}\",\n    \"subject\": \"{title}\",\n    \"date\": \"{dateline}\"\n  }\n  [/index]\n  [loop]\n  ,{\n    \"tid\": \"{id}\",\n    \"subject\": \"{title}\",\n    \"date\": \"{dateline}\"\n  }\n  [/loop]\n];\n</script>\n``````javascript\n<ul>\n  [loop]\n    <li>\n      <span class=\"tid\">{id}</span>\n      <span class=\"subject\">{title}</span>\n      <span class=\"date\">{dateline}</span>\n      <img class=\"cover\" src=\"{pic}\">\n    </li>\n  [/loop]\n</ul>\n``````javascript\n<ul class=\"article-list\">\n  <li class=\"item\" v-for=\"item in articleList\">\n    <router-link :to=\"`/article/${item.tid}`\" >\n      <div class=\"cover\">\n        <img :src=\"item.cover\">\n      </div>\n      <div class=\"subject\">{{ item.subject }}</div>\n      <div class=\"date\">{{ item.date }}</div>\n    </router-link>\n  </li>\n</ul>\n``````javascript\narticleList: [\n  {\n    tid: '123',\n    subject: '文章的标题111',\n    date: '2018-11-11',\n    cover:\n      'https://chengpeiquan.com/img/cover1.jpg?x-oss-process=image/interlace,1',\n  },\n  {\n    tid: '456',\n    subject: '文章的标题222',\n    date: '2018-12-12',\n    cover:\n      'https://chengpeiquan.com/img/cover2.jpg?x-oss-process=image/interlace,1',\n  },\n]\n````document.write````javascript\nthis.$ajax({\n  method: 'get',\n  url: '/api.php',\n  params: {\n    mod: 'js',\n    bid: 123,\n  },\n})\n  .then((response) => {\n    // 把数据调用返回的数据进行格式化\n    const DATA = response.data.slice(16, -3).replace(/\\\\n|\\t/g, '')\n\n    // 缓存格式化后的html代码，写入一个临时的DOM里\n    const NEW_DIV = document.createElement('div')\n    NEW_DIV.innerHTML = DATA\n\n    // 提取需要的标签内容，转为JSON格式\n    const RESULT = []\n    const LIST = NEW_DIV.querySelectorAll('li')\n    LIST.forEach((item, index) => {\n      // 遍历期间都先统一缓存结果\n      const RESULT_ITEM = {}\n      RESULT_ITEM['tid'] = item.querySelector('.tid').innerText\n      RESULT_ITEM['subject'] = item.querySelector('.subject').innerText\n      RESULT_ITEM['date'] = item.querySelector('.date').innerText\n      RESULT_ITEM['cover'] = item.querySelector('img').src\n      RESULT.push(item)\n\n      // 遍历结束再统一生成虚拟DOM\n      if (index === LIST.length - 1) {\n        this.articleList = RESULT\n      }\n    })\n  })\n  .catch((error) => {\n    console.log(error)\n  })\n```\n"
  },
  {
    "slug": "vconsole",
    "title": "移动端真机debug调试神器 vConsole的引入说明（原生态与WebPack）",
    "desc": "距离这个神器发布第一个版本的时间，已经过去3年了，不过还是有蛮多新同学不知道他的存在，在做项目的时候，移动端真机调试还是用alert来弹，不仅调试起来很烦，也蛮不好定位问题的。安利过的每个人，都对vConsole有着100%的好评哈哈哈，写个博文记录下吧，好东西应该持续推荐。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/11/1-1.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2018/11/11.jpg?x-oss-process=image/interlace,1)> [](https://www.npmjs.com/package/vconsole)> [](https://github.com/Tencent/vConsole)```javascript\n<script type=\"text/javascript\" src=\"js/static/vconsole.min.js\"></script>\n<script type=\"text/javascript\">\nvar vConsole = new Vconsole();\n</script>\n``````javascript\nimport Vconsole from 'vconsole'\nconst vConsole = new Vconsole()\nexport default vConsole\n``````javascript\nimport '@js/static/vconsole'\n```\n"
  },
  {
    "slug": "vue-cli-3",
    "title": "Vue-CLI脚手架3.0升级小结（含Win版Node升级与PowerShell踩坑记录）",
    "desc": "Vue脚手架3.0出来也蛮久了，秉着前人先踩坑的习惯，最近才开始升级。整个过程还是蛮顺利的，不过也有一些小小的问题，简单记录起来。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/11/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://cli.vuejs.org/zh/guide/)> [](https://stackoverflow.com/questions/50597159/npm-err-asyncwrite-is-not-a-function)![](https://cdn.chengpeiquan.com/img/2018/11/1.jpg?x-oss-process=image/interlace,1)> [](https://nodejs.org/zh-cn/download/)\n>\n> <br>\n>\n> [](https://nodejs.org/zh-cn/download/releases/)\n>\n> <br>\n>\n> [](https://nodejs.org/download/release/v8.11.2/node-v8.11.2-win-x64.zip)![](https://cdn.chengpeiquan.com/img/2018/11/2.jpg?x-oss-process=image/interlace,1)`npm install -g @vue/cli`![](https://cdn.chengpeiquan.com/img/2018/11/3.jpg?x-oss-process=image/interlace,1)![](https://cdn.chengpeiquan.com/img/2018/11/4.jpg?x-oss-process=image/interlace,1)[](https://cli.vuejs.org/zh/config/)```javascript\nconst path = require('path')\nfunction resolve(dir) {\n  return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n  publicPath: './',\n  assetsDir: 'static',\n  productionSourceMap: false,\n  lintOnSave: false,\n  chainWebpack: (config) => {\n    config.resolve.alias\n      .set('@', resolve('src'))\n      .set('@img', resolve('src/assets/img'))\n      .set('@styl', resolve('src/assets/styl'))\n      .set('@js', resolve('src/assets/js'))\n      .set('@cp', resolve('src/components'))\n      .end()\n    config.module\n      .rule('images')\n      .test(/\\.(png|jpe?g|gif|webp|svg)(\\?.*)?$/)\n      .use('url-loader')\n      .loader('url-loader')\n      .options({\n        limit: 10000,\n        fallback: {\n          loader: 'file-loader',\n          options: {\n            name: 'static/img/[name].[hash:8].[ext]',\n          },\n        },\n      })\n      .end()\n  },\n}\n```\n"
  },
  {
    "slug": "wechat-bug-input-textarea",
    "title": "微信浏览器input/textarea回收键盘后界面错位bug的解决办法",
    "desc": "最近在处理一个H5页面的时候，有一个需要用户填写昵称信息的环节，模拟器一切正常，结果到了真机上发现输入信息完毕后，无法点击确认按钮emmm，黑人问号了半天，联系QA又深度测试了一下，发现只有iOS的微信浏览器才会。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-6.jpg?x-oss-process=image/interlace,1",
    "content": "> [](https://segmentfault.com/q/1010000015447012)\n\n```javascript\n// jQuery\n$('input').on('blur', this, (ev) => {\n  window.scrollTo(0, 0)\n})\n\n// 原生js\n// inputElm是定义需要监听的DOM\ninputElm.addEventListener('blur', () => {\n  window.scrollTo(0, 0)\n})\n```\n"
  },
  {
    "slug": "js-exchange-random",
    "title": "低成本实现“猜你喜欢”需求的几种思路（本质为随机数与“换一换”）",
    "desc": "这个话题的第一次出现，是在2017年8月份的时候，到现在也蛮久了，之所以想起来说要小结一下，是因为这一年里不少新同学都过问过这么个问题，自己虽然做的不算多，但也通过几种情况完成了各类需求，写个笔记也方便以后用。那会自己第一次遇到一个需求是做一个“猜你喜欢”，然后没有后端的支持，也就是实际上这个“猜你喜欢”本质并不是“猜”，而是一个随机展示，也就是所谓的“换一换”。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-7.jpg?x-oss-process=image/interlace,1",
    "content": "```javascript\n// 执行请求之前，定义一个随机正整数，比如举例是随机从1~10页里取其中1页\n// 由于page通常都是从1开始，所以要用ceil向上取整\nconst randomPage = Math.ceil(Math.random() * 10)\n\n$.ajax({\n  // ……\n  data: {\n    page: randomPage,\n  },\n  success: function (data) {\n    // ……\n  },\n  //……\n})\n```\n\n```javascript\n$.ajax({\n  // ……\n  success: function (data) {\n    // 假设result是数据源\n    // 假设列表展示的数量是6个\n    const randomLength = 6\n\n    // 所以这里先计算出一个随机范围的最大上限，以保证不会随机到数据范围外\n    const randomRange = data.result.length - randomLength\n\n    // 计算起始的随机值，因为数组是从0开始下标，所以这里是用round来进行四舍五入取整\n    const min = Math.round(Math.random() * randomRange)\n\n    // 截止的数即为起始值假设列表数量\n    const max = min + randomLength\n\n    // 渲染列表\n    for (let i = min; i < max; i++) {\n      // ……\n    }\n  },\n})\n```\n"
  },
  {
    "slug": "ckeditor4-rich-text-editor-webpack",
    "title": "基于CKEditor4的富文本编辑器 WebPack引入说明与配置注意事项",
    "desc": "前几天对接了个需求，说因为传统的CMS太笨重，并且一些业务结合点想落地的话改造太麻烦，想让我这边帮他做一个发布后台，前后端分离，他只负责数据和接口，其他的由我自己把控。我当时没立即答应，因为我不会啊 - - 哈哈哈没玩过这东西，之前做发布都是直接走CMS或者WordPress这种直接现成的发布系统，偶尔自己做一些活动用的传图发布页面也是简单的一个textarea就完事。不过好奇心又很强，也想学多点东西，还是接了过来，然后让他给我点时间我得尝试一下。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-3.jpg?x-oss-process=image/interlace,1",
    "content": "```javascript\n<textarea name=\"editor\" id=\"editor\"></textarea>\n``````javascript\n//js里通过CKEditor的api去替换那个textarea生成富文本编辑器\nCKEDITOR.replace('editor')\n\n//最后可以通过ck的api获取编辑器内容提交\nCKEDITOR.instances.editor.getData()\n```> [](https://ckeditor.com/ckeditor-4/download/)\n>\n> <br>\n>\n> [](https://ckeditor.com/docs/ckeditor4/latest/guide/)![](https://cdn.chengpeiquan.com/img/2018/10/1-4.jpg?x-oss-process=image/interlace,1)```javascript\n$.getScript('./plugins/ckeditor/ckeditor.js').done(function () {\n  CKEDITOR.replace('editor')\n  // 编辑器加载完毕后要执行的操作\n  // 比如配置传图接口\n  // 比如提交等等\n  // ...\n})\n``````javascript\nCKEDITOR.getUrl('contents.css')\n```> [](https://ckeditor.com/docs/ckeditor4/latest/guide/dev_basepath.html)```javascript\n$.getScript('./plugins/ckeditor/ckeditor.js').done(function () {\n  const CKEDITOR_BASEPATH = './plugins/ckeditor/'\n  CKEDITOR.replace('editor')\n})\n```![](https://cdn.chengpeiquan.com/img/2018/10/2-1.jpg?x-oss-process=image/interlace,1)> [](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html)```javascript\n//api.image是我配置好的传图接口变量，实际是一个接口的url\nfilebrowserImageUploadUrl: api.image\n```![](https://cdn.chengpeiquan.com/img/2018/10/233.jpg?x-oss-process=image/interlace,1)> [](https://ckeditor.com/docs/ckeditor4/latest/guide/dev_file_upload.html)```javascript\n// 成功的返回格式\n{\n    \"uploaded\": 1,\n    \"fileName\": \"foo(2).jpg?x-oss-process=image/interlace,1\",\n    \"url\": \"/files/foo(2).jpg?x-oss-process=image/interlace,1\",\n    \"error\": {\n        \"message\": \"A file with the same name already exists. The uploaded file was renamed to \\\"foo(2).jpg?x-oss-process=image/interlace,1\\\".\"\n    }\n}\n\n// 失败的返回格式\n{\n    \"uploaded\": 0,\n    \"error\": {\n        \"message\": \"The file is too big.\"\n    }\n}\n``````javascript\n// instanceReady是监听编辑器载入成功并渲染完毕，必须放到这里才能给编辑器赋值\nCKEDITOR.on('instanceReady', function (e) {\n  //一系列操作，比如请求接口等...\n\n  //这个是从接口拿下来的数据\n  const content = article_data[0].content\n\n  //这个是利用jQuery直接操作iframe的语句，不需要，但是备注一下免得以后用到\n  // $(\".cke_wysiwyg_frame\").contents().find(\".cke_editable\").html(content);\n\n  //这个是通过ck的api实现填充数据\n  CKEDITOR.instances.editor.setData(content)\n})\n``````javascript\n$.getScript('./plugins/ckeditor/ckeditor.js').done(function () {\n  // 修改编辑器插件文件的引入路径，需要在生成编辑器之前定义好\n  const CKEDITOR_BASEPATH = './plugins/ckeditor/'\n\n  // 创建编辑器\n  CKEDITOR.replace('editor', {\n    // 修改传图预览的默认文案\n    image_previewText: CKEDITOR.tools.repeat(' ', 100),\n    // 修改传图接口（api.image是我提前定义好的配置，否则就直接写接口的url）\n    filebrowserImageUploadUrl: api.image,\n    // 修改编辑器的默认高度\n    height: 400,\n  })\n\n  // 监听编辑器载入情况\n  CKEDITOR.on('instanceReady', function (e) {\n    //一些判断，看是否需要进入编辑模式\n    //请求接口啥的...\n    const content = article_data[0].content\n    //把接口的内容赋值到编辑器里\n    CKEDITOR.instances.editor.setData(content)\n  })\n\n  // 提交按钮的操作\n  $('#submit').click(function () {\n    //获取各种输入的值\n    //一些input、select之类的val\n\n    //这一句是通过ck的api获取编辑器的内容，富文本是包含了各种p标签、img标签的混杂的html\n    const editor_content = CKEDITOR.instances.editor.getData()\n\n    //一些判断，看该填的是否有填…\n    //然后就是post到接口提交了\n  })\n})\n```\n"
  },
  {
    "slug": "axios-ie9",
    "title": "解决axios的responseType为\"json\"时IE9报undefined的兼容办法",
    "desc": "虽然axios说可以兼容IE9，但实际上在项目开发过程中，IE9报错，而且目前的情况是responseType为\"json\"时才会报这个异常，相关请求代码大致如下",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-8.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2018/10/1-5.jpg?x-oss-process=image/interlace,1)```javascript\n// main.js\nimport axios from 'axios'\nVue.prototype.$ajax = axios\n\n// xxx.vue组件内请求接口\nthis.$ajax({\n  // …\n  responseType: 'json',\n})\n  .then((response) => {\n    // 虽然请求成功，但并不会进入这里\n  })\n  .catch((error) => {\n    // 而是直接报错\n  })\n```> [](https://github.com/axios/axios/issues/265#issuecomment-333014355)```javascript\n// 处理axios在IE下的坑爹问题\naxios.interceptors.response.use((response) => {\n  // IE 8-9\n  if (\n    response.data == null &&\n    response.config.responseType === 'json' &&\n    response.request.responseText != null\n  ) {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      response.data = JSON.parse(response.request.responseText)\n    } catch (e) {\n      // ignored\n    }\n  }\n  return response\n})\n```\n"
  },
  {
    "slug": "noconflict-jquery-zepto",
    "title": "只写一次执行函数 同时兼容桌面noConflict后的jQuery与移动端的Zepto",
    "desc": "今天遇到一个比较特殊的情况是这样子，维护一个年代比较久远的项目，说年代久远也就三年前开发上线的，实际生产线还是用的很稳，只不过中间经历了一次改版，后端倒没啥，同一个部门维护的，前端当时因为排期问题，为了及时上线，所以做桌面端模板和移动端模板是两个不同的部门的开发，于是，现在需要做一些中间层的需求就遇到了这么一个稍微有点坑爹的情况。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "![](https://cdn.chengpeiquan.com/img/2018/10/1-1.jpg?x-oss-process=image/interlace,1)```javascript\n//平时常用的形参立即执行函数简写\n;(function ($) {\n  //...\n})(jQuery)\n\n//其实等同于\nvar fn = function ($) {\n  //...\n}\nfn(jQuery)\n\n//所以只需要写一次代码，封装到一个函数里，再根据不同平台去判断调用jQuery还是Zepto\nvar mobileUA = /iPhone|phone|android|iPod|pad|iPad/i.test(\n  navigator.userAgent.toLowerCase(),\n)\nif (mobileUA) {\n  fn(Zepto)\n} else {\n  fn(jQuery)\n}\nfunction fn($) {\n  //...\n}\n``````javascript\n//因为页头已经给jQuery重新绑定了别名jq\nvar jq = jQuery.noConflict()\n\n//所以用jq简写就可以了\njq(function () {\n  fn(jQuery)\n})\n``````javascript\n//因为addEventListener直接执行fn(Zepto)会报错Zepto未定义\n//所以把fn(Zepto)放到另外一个函数里去执行，就没问题\nwindow.addEventListener('load', loadDone)\nfunction loadDone() {\n  fn(Zepto)\n}\n``````javascript\nvar mobileUA = /iPhone|phone|android|iPod|pad|iPad/i.test(\n  navigator.userAgent.toLowerCase(),\n)\nif (mobileUA) {\n  window.addEventListener('load', loadDone)\n} else {\n  jq(function () {\n    fn(jQuery)\n  })\n}\nfunction loadDone() {\n  fn(Zepto)\n}\nfunction fn($) {\n  //这里是项目需要的代码内容...\n}\n```\n"
  },
  {
    "slug": "large-image-preload-fast",
    "title": "弹窗大背景优化方案 png大图片预加载处理方法",
    "desc": "因为一直做游戏风格的需求，而日常维护的游戏也比较朴素，都是用纯css处理的渐变底色即可满足弹窗背景的配置，最近处理了一个比较花哨的需求，弹窗设计方面比较下功夫，带来的一个问题就是这个弹窗背景图只能切成png，哪怕经过tinypng优化之后还有50多kb。50kb的图片说实话也不算特别大，如果作为常规的img加载其实没什么问题，但作为背景图来加载，问题就会被放大 —— 用户访问页面后，第一次打开弹窗的体验非常差，会先显示弹窗内容，再慢慢加载弹窗背景（隐藏层的背景需要层变为可见才会加载）。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1.jpg?x-oss-process=image/interlace,1",
    "content": "```javascript\n// 定义需要预加载的图片数组（可以是本地文件也可以是绝对地址）\nconst imgList = [\n  require('@img/a-large-image-01.png'),\n  require('@img/a-large-image-02.png'),\n  require('@img/a-large-image-03.png'),\n  require('@img/a-large-image-04.png'),\n  // ...\n]\n\n// 定义预加载函数\nfunction imgPreload(imgArr) {\n  for (let i = 0; i < imgArr.length; i++) {\n    const newIMG = new Image()\n    newIMG.src = imgArr[i]\n  }\n}\n\n// 执行预加载\nimgPreload(imgList)\n```\n"
  },
  {
    "slug": "vue-toast",
    "title": "Vue插件：封装独立的通用组件 可复用的单文件式全局Toast弹窗",
    "desc": "最近突然很想简化一些自己写的，项目常用的调用小功能，比如一些弹窗等等，之前都是H/J/C分离，每次复用都要分别写到对应的文件里，略显麻烦。最近看了Vue官网有关于插件打包的说明，尝试了一下还可以，目前成功打包了一个Toast组件。以后每次项目要用到Toast弹窗，只需要引入一个 showToast.vue 即可直接生效调用，而不必在多个文件里维护自己的那部分代码。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/10/1-9.jpg?x-oss-process=image/interlace,1",
    "content": "```js\n<template>\n  <div id=\"app\">\n    <router-view></router-view>\n    <ShowToast></ShowToast>\n  </div>\n</template>\n``````js\n//引入Vue\nimport Vue from 'vue'\n\n//引入组件，@cp是我自定义的路径别名，相当于@/components/\nimport ShowToast from '@cp/showToast.vue'\n\n//注册使用方法\nVue.use(ShowToast)\n\n//添加模板\nexport default {\n  name: 'App',\n  components: { ShowToast },\n}\n``````js\n//默认2秒的弹窗\nthis.$showToast('默认2秒的弹窗')\n\n//持续显示10秒的弹窗\nthis.$showToast('持续显示10秒', 10000)\n\n//执行回调函数\nthis.$showToast('发布成功，即将进入首页…', 2000, () => {\n  this.$router.push({\n    name: 'home',\n  })\n})\n```![](https://cdn.chengpeiquan.com/img/2021/02/20210217012731.jpg?x-oss-process=image/interlace,1)```html\n<template>\n  <div class=\"common-toast\">\n    <div class=\"content\">\n      <p>\n        <span></span>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n  const showToast = {\n    install(Vue, options) {\n      Vue.prototype.$showToast = function (text, duration = 2000, callback) {\n        document.querySelector('.common-toast').style.display = 'block'\n        const newToast = document.querySelector('.common-toast .content')\n        newToast.querySelector('span').innerText = text\n        setTimeout((w, h) => {\n          w = newToast.offsetWidth\n          h = newToast.offsetHeight\n          newToast.style.marginTop = '-' + h / 2 + 'px'\n          newToast.style.marginLeft = '-' + w / 2 + 'px'\n        }, 10)\n        setTimeout(() => {\n          document.querySelector('.common-toast').style.display = 'none'\n          if (typeof callback === 'function') {\n            callback()\n          }\n        }, duration)\n      }\n    },\n  }\n  export default showToast\n</script>\n\n<style lang=\"stylus\" scoped>\n  .common-toast\n  \tdisplay none\n  \tposition fixed\n  \ttop 0\n  \tleft 0\n  \twidth 100%\n  \theight 100%\n  \tbackground-color rgba(0,0,0,0.6)\n  \tz-index 999998\n  \t.content\n  \t\tposition absolute\n  \t\ttop 50%\n  \t\tleft 50%\n  \t\tmargin-top -1rem\n  \t\tmargin-left -3rem\n  \t\tbackground-color rgba(0,0,0,0.4)\n  \t\tbox-shadow 0 0 10px rgba(0,0,0,0.2)\n  \t\tcolor #fff\n  \t\ttext-align center\n  \t\tborder-radius 6px\n  \t\tz-index 999999\n  \t\tp\n  \t\t\tdisplay table-cell\n  \t\t\tvertical-align middle\n  \t\t\twidth 6rem\n  \t\t\theight 2rem\n  \t\t\tbox-sizing border-box\n  \t\t\tpadding 0.2rem\n  \t\t\toverflow hidden\n  \t\tspan\n  \t\t\tfont-size 0.3865rem\n  \t\t\tvertical-align middle\n  \t\t\tcolor #fff\n</style>\n```> [](https://github.com/chengpeiquan/vue-toast)\n"
  },
  {
    "slug": "vue-ajax-axios",
    "title": "Vue使用ajax 关于axios遇到乱码等问题的那些坑",
    "desc": "这个情况当时是很懵逼的，因为在PC端，以及使用Chrome的移动端模拟器测试都一切正常，但到了真机上提交数据时，只要包含了中文，post到服务端的结果永远是【銆愭姤鍚嶇粍鍒】，这个至今还是不知道到底是什么鬼。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/09/1-1.jpg?x-oss-process=image/interlace,1",
    "content": ">\n\n> [](https://www.npmjs.com/package/axios)\n>\n> <br>\n>\n> [](https://www.npmjs.com/package/qs)\n\n```bash\n# 安装axios和qs\nnpm i axios\nnpm i qs\n```\n\n```js\n//打开main.js，在全局引入\n//注意这里axios和qs都不能用use，因为不属于Vue的插件，不带安装接口，得用prototype原型引入\n//引入后，就可以在任意组件里使用this.$ajax去调用axios了，qs也是this.$qs\nimport axios from 'axios'\nimport qs from 'qs'\n\nVue.prototype.$ajax = axios\nVue.prototype.$qs = qs\n\n//注意回调那里我是用了箭头函数提升了this，否则需要提前先设定一个变量把this存储起来\n\n//get请求，注意是使用params\nthis.$ajax({\n  method: 'get',\n  url: '接口的地址',\n  params: {\n    param1: '接口参数…',\n    param2: '接口参数…',\n    param3: '接口参数…',\n    // ……\n    // 更多的参数，一般都是page页码，tpp每页数量等\n  },\n  responseType: 'json',\n})\n  .then((response) => {\n    // 请求成功后执行的操作\n    // ...\n  })\n  .catch((error) => {\n    // 请求失败，一般都是返回对应的提示给用户\n    // ...\n  })\n\n//post请求，注意是使用data和qs\nthis.$ajax({\n  method: 'post',\n  url: '接口的地址',\n  data: this.$qs.stringify({\n    param1: '接口参数…',\n    param2: '接口参数…',\n    param3: '接口参数…',\n    // ……\n    // 更多的参数，一般都是用户填写的数据、用户身份校验信息等\n  }),\n  responseType: 'json',\n})\n  .then((response) => {\n    // 请求成功执行的操作\n    // ...\n  })\n  .catch((error) => {\n    // 请求失败，一般都是返回对应的提示给用户\n    // ...\n  })\n```\n"
  },
  {
    "slug": "wordpress-rewrite-nginx-lnmp",
    "title": "基于lnmp配置WordPress的Nginx伪静态方法",
    "desc": "Nginx配置rewrite，基于lnmp搭建的话，其实配置起来非常简单，只需要在lnmp上输入几个简单的指令就可以把域名和伪静态类型关联上，重启Nginx后直接生效~",
    "cover": "https://cdn.chengpeiquan.com/img/2018/09/1-2.jpg?x-oss-process=image/interlace,1",
    "content": "1.\n2.\n\n```bash\n# 打开终端，输入ssh 你的用户名@你的服务器IP\n# 回车后会提示你输入服务器密码，登录后就可以开始配置了\nssh root@192.168.1.1\n\n# 登入成功，可以先查看当前绑定的域名情况（这里指服务端的配置情况，和域名解析指向那块没关系）\n# 输入查询指令\nlnmp vhost list\n\n# 如果是新搭建的服务器，上面的查询结果应该是空，这个时候开始添加自己的域名\n# 输入添加指令\nlnmp vhost add\n\n# 会提示你输入需要绑定的域名\n# Please enter domain(example: www.lnmp.org):\nwww.chengpeiquan.com\n\n# 再下一步可以再绑定其他域名或者泛域名，根据需要配置\n# Enter more domain name(example: lnmp.org *.lnmp.org):\nchengpeiquan.com\n\n# 配置好域名，会提示你绑定网站的目录\n# 默认是新建一个网站域名的文件夹，但如果和我一样先建了网站再绑域名的话，就要输入网站的目录了（从根目录开始）\n# Please enter the directory for the domain:\n# Default directory: /home/wwwroot/chengpeiquan.com:\n/home/wwwroot/default\n\n# 接下来就是重点了，问你是否允许rewrite，我们伪静态就是要的这个，必须yes\n# Allow Rewrite rule? (y/n)\ny\n\n# 接着是选择要引入的rewrite的规则，lnmp默认已经把各种常用的程序规则配好，但是没引入，所以在这个步骤就需要根据自己的需求引入想要的配置\n# Please enter the rewrite of programme,\n# wordpress,discuzx,typecho,thinkphp,laravel,codeigniter,yii2 rewrite was exist.\n# (Default rewrite: other):\nwordpress\n\n# 后面的问题就没什么影响了，看自己需要设置是否允许log、SSL证书什么的\n# 配置完毕后，重启Nginx，搞定\n/etc/init.d/nginx restart\n```\n\n> [](https://lnmp.org/faq/lnmp-vhost-add-howto.html)\n"
  },
  {
    "slug": "hello-world",
    "title": "世界，您好！",
    "desc": "这是这次博客的第一篇文章，不是历史以来的第一篇。以前也在这个域名下搭过一次WordPress，但后来写的东西有点杂，而且觉得以前记录的问题已经都不是什么问题了，所以在之前的新浪云到期之后，果断就舍弃了。",
    "cover": "https://cdn.chengpeiquan.com/img/2018/09/1.jpg?x-oss-process=image/interlace,1",
    "content": ""
  }
]